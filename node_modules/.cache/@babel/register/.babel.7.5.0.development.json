{
  "{\"sourceRoot\":\"F:\\\\Udemy\\\\Web BootCamp\\\\smartbrainimagedetector-api\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"F:\\\\Udemy\\\\Web BootCamp\\\\smartbrainimagedetector-api\",\"filename\":\"F:\\\\Udemy\\\\Web BootCamp\\\\smartbrainimagedetector-api\\\\server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"F:\\\\Udemy\\\\Web BootCamp\\\\smartbrainimagedetector-api\",\"plugins\":[],\"presets\":[]}:7.5.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "F:\\Udemy\\Web BootCamp\\smartbrainimagedetector-api",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "F:\\Udemy\\Web BootCamp\\smartbrainimagedetector-api",
      "filename": "F:\\Udemy\\Web BootCamp\\smartbrainimagedetector-api\\server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "F:\\Udemy\\Web BootCamp\\smartbrainimagedetector-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "F:\\Udemy\\Web BootCamp\\smartbrainimagedetector-api\\server.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "F:\\Udemy\\Web BootCamp\\smartbrainimagedetector-api\\server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "F:\\Udemy\\Web BootCamp\\smartbrainimagedetector-api",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "import express from 'express';\n\nconst bodyParser = require('body-parser');\n\nconst app = express();\nconst portNumber = 3000;\nconst status = {\n  Status: 'Healthy'\n};\nconst database = {\n  user: [{\n    id: 123,\n    name: 'John',\n    email: 'john@gmail.com',\n    password: '1234',\n    entries: 0,\n    joined: new Date()\n  }, {\n    id: 124,\n    name: 'Sally',\n    email: 'sally@gmail.com',\n    password: '5678',\n    entries: 0,\n    joined: new Date()\n  }]\n};\napp.use(bodyParser.json());\napp.get('/', (req, res) => {\n  res.json(status);\n});\napp.get('/getAllUsers', (req, res) => {\n  res.json(database.user);\n});\napp.get('/profile/:id', (req, res) => {\n  const {\n    id\n  } = req.params;\n  let found = false;\n  database.user.forEach(user => {\n    if (user.id == id) {\n      found = true;\n      return res.json(user);\n    }\n  });\n\n  if (!found) {\n    return res.status(404).json('User Not Found');\n  }\n\n  ;\n});\napp.post('/signin', (req, res) => {\n  if (req.body.email === database.user[0].email && req.body.password === database.user[0].password) {\n    res.json('succss');\n  } else {\n    res.status(401).json('error logging in');\n  }\n});\napp.post('/register', (req, res) => {\n  const {\n    email,\n    name,\n    password\n  } = req.body;\n  database.user.push({\n    id: database.user[database.user.length - 1].id + 1,\n    name: name,\n    email: email,\n    password: password,\n    entries: 0,\n    joined: new Date()\n  });\n  res.json(database.user[database.user.length - 1]);\n});\napp.put('/image', (req, res) => {\n  const {\n    id\n  } = req.body;\n  let found = false;\n  database.user.forEach(user => {\n    if (user.id == id) {\n      found = true;\n      user.entries++;\n      return res.json(user.entries);\n    }\n  });\n\n  if (!found) {\n    return res.status(404).json('User Not Found');\n  }\n});\napp.listen(portNumber, () => {\n  console.log(`app is running ${portNumber}`);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwiYm9keVBhcnNlciIsInJlcXVpcmUiLCJhcHAiLCJwb3J0TnVtYmVyIiwic3RhdHVzIiwiU3RhdHVzIiwiZGF0YWJhc2UiLCJ1c2VyIiwiaWQiLCJuYW1lIiwiZW1haWwiLCJwYXNzd29yZCIsImVudHJpZXMiLCJqb2luZWQiLCJEYXRlIiwidXNlIiwianNvbiIsImdldCIsInJlcSIsInJlcyIsInBhcmFtcyIsImZvdW5kIiwiZm9yRWFjaCIsInBvc3QiLCJib2R5IiwicHVzaCIsImxlbmd0aCIsInB1dCIsImxpc3RlbiIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiJBQUFBLE9BQU9BLE9BQVAsTUFBb0IsU0FBcEI7O0FBQ0EsTUFBTUMsVUFBVSxHQUFHQyxPQUFPLENBQUMsYUFBRCxDQUExQjs7QUFHQSxNQUFNQyxHQUFHLEdBQUdILE9BQU8sRUFBbkI7QUFDQSxNQUFNSSxVQUFVLEdBQUcsSUFBbkI7QUFDQSxNQUFNQyxNQUFNLEdBQUM7QUFDVEMsRUFBQUEsTUFBTSxFQUFFO0FBREMsQ0FBYjtBQUlBLE1BQU1DLFFBQVEsR0FBRztBQUNiQyxFQUFBQSxJQUFJLEVBQUMsQ0FDRDtBQUNJQyxJQUFBQSxFQUFFLEVBQUUsR0FEUjtBQUVJQyxJQUFBQSxJQUFJLEVBQUUsTUFGVjtBQUdJQyxJQUFBQSxLQUFLLEVBQUUsZ0JBSFg7QUFJSUMsSUFBQUEsUUFBUSxFQUFFLE1BSmQ7QUFLSUMsSUFBQUEsT0FBTyxFQUFFLENBTGI7QUFNSUMsSUFBQUEsTUFBTSxFQUFFLElBQUlDLElBQUo7QUFOWixHQURDLEVBVUQ7QUFDSU4sSUFBQUEsRUFBRSxFQUFFLEdBRFI7QUFFSUMsSUFBQUEsSUFBSSxFQUFFLE9BRlY7QUFHSUMsSUFBQUEsS0FBSyxFQUFFLGlCQUhYO0FBSUlDLElBQUFBLFFBQVEsRUFBRSxNQUpkO0FBS0lDLElBQUFBLE9BQU8sRUFBRSxDQUxiO0FBTUlDLElBQUFBLE1BQU0sRUFBRSxJ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QUFBQTtBQUFELE1BQU9VLEdBQUcsQ0FBQ00sSUFBakI7QUFDQSxNQUFJSCxLQUFLLEdBQUcsS0FBWjtBQUVBZixFQUFBQSxRQUFRLENBQUNDLElBQVQsQ0FBY2UsT0FBZCxDQUFzQmYsSUFBSSxJQUFHO0FBQ3pCLFFBQUdBLElBQUksQ0FBQ0MsRUFBTCxJQUFXQSxFQUFkLEVBQWlCO0FBQ2JhLE1BQUFBLEtBQUssR0FBRyxJQUFSO0FBQ0FkLE1BQUFBLElBQUksQ0FBQ0ssT0FBTDtBQUNGLGFBQVFPLEdBQUcsQ0FBQ0gsSUFBSixDQUFTVCxJQUFJLENBQUNLLE9BQWQsQ0FBUjtBQUNEO0FBQ0osR0FORDs7QUFRQSxNQUFHLENBQUNTLEtBQUosRUFBVTtBQUNOLFdBQVFGLEdBQUcsQ0FBQ2YsTUFBSixDQUFXLEdBQVgsRUFBZ0JZLElBQWhCLENBQXFCLGdCQUFyQixDQUFSO0FBQ0g7QUFHSixDQWpCRDtBQW1CQWQsR0FBRyxDQUFDMEIsTUFBSixDQUFXekIsVUFBWCxFQUF1QixNQUFLO0FBQ3hCMEIsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQWEsa0JBQWlCM0IsVUFBVyxFQUF6QztBQUNILENBRkQiLCJzb3VyY2VSb290IjoiRjpcXFVkZW15XFxXZWIgQm9vdENhbXBcXHNtYXJ0YnJhaW5pbWFnZWRldGVjdG9yLWFwaSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xyXG5jb25zdCBib2R5UGFyc2VyID0gcmVxdWlyZSgnYm9keS1wYXJzZXInKVxyXG5cclxuXHJcbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcclxuY29uc3QgcG9ydE51bWJlciA9IDMwMDA7XHJcbmNvbnN0IHN0YXR1cz17XHJcbiAgICBTdGF0dXM6ICdIZWFsdGh5J1xyXG59XHJcblxyXG5jb25zdCBkYXRhYmFzZSA9IHtcclxuICAgIHVzZXI6W1xyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgaWQ6IDEyMyxcclxuICAgICAgICAgICAgbmFtZTogJ0pvaG4nLFxyXG4gICAgICAgICAgICBlbWFpbDogJ2pvaG5AZ21haWwuY29tJyxcclxuICAgICAgICAgICAgcGFzc3dvcmQ6ICcxMjM0JyxcclxuICAgICAgICAgICAgZW50cmllczogMCxcclxuICAgICAgICAgICAgam9pbmVkOiBuZXcgRGF0ZSgpXHJcbiAgICAgICAgfSxcclxuXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBpZDogMTI0LFxyXG4gICAgICAgICAgICBuYW1lOiAnU2FsbHknLFxyXG4gICAgICAgICAgICBlbWFpbDogJ3NhbGx5QGdtYWlsLmNvbScsXHJcbiAgICAgICAgICAgIHBhc3N3b3JkOiAnNTY3OCcsXHJcbiAgICAgICAgICAgIGVudHJpZXM6IDAsXHJcbiAgICAgICAgICAgIGpvaW5lZDogbmV3IERhdGUoKVxyXG4gICAgICAgIH1cclxuICAgIF1cclxufVxyXG5cclxuYXBwLnVzZShib2R5UGFyc2VyLmpzb24oKSk7XHJcblxyXG5cclxuXHJcbmFwcC5nZXQoJy8nLCAocmVxLCByZXMpPT57XHJcbiAgICByZXMuanNvbihzdGF0dXMpXHJcbn0pXHJcblxyXG5hcHAuZ2V0KCcvZ2V0QWxsVXNlcnMnLCAocmVxLCByZXMpPT57XHJcbiAgICByZXMuanNvbihkYXRhYmFzZS51c2VyKVxyXG59KVxyXG5cclxuYXBwLmdldCgnL3Byb2ZpbGUvOmlkJywgKHJlcSwgcmVzKT0+e1xyXG4gICAgY29uc3Qge2lkfSA9IHJlcS5wYXJhbXM7XHJcbiAgICBsZXQgZm91bmQgPSBmYWxzZTtcclxuXHJcbiAgICBkYXRhYmFzZS51c2VyLmZvckVhY2godXNlciA9PntcclxuICAgICAgICBpZih1c2VyLmlkID09IGlkKXtcclxuICAgICAgICAgICAgZm91bmQgPSB0cnVlO1xyXG4gICAgICAgICAgcmV0dXJuICByZXMuanNvbih1c2VyKTtcclxuICAgICAgICB9XHJcbiAgICB9KTtcclxuXHJcbiAgICBpZighZm91bmQpe1xyXG4gICAgICAgIHJldHVybiAgcmVzLnN0YXR1cyg0MDQpLmpzb24oJ1VzZXIgTm90IEZvdW5kJyk7XHJcbiAgICB9O1xyXG59KTtcclxuXHJcblxyXG5hcHAucG9zdCgnL3NpZ25pbicsKHJlcSxyZXMpPT57XHJcbiAgICBpZihyZXEuYm9keS5lbWFpbCA9PT0gZGF0YWJhc2UudXNlclswXS5lbWFpbCAmJiBcclxuICAgICAgICByZXEuYm9keS5wYXNzd29yZCA9PT0gZGF0YWJhc2UudXNlclswXS5wYXNzd29yZCl7XHJcbiAgICAgICAgICAgIHJlcy5qc29uKCdzdWNjc3MnKTtcclxuICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgcmVzLnN0YXR1cyg0MDEpLmpzb24oJ2Vycm9yIGxvZ2dpbmcgaW4nKVxyXG4gICAgICAgIH1cclxufSk7XHJcblxyXG5hcHAucG9zdCgnL3JlZ2lzdGVyJywgKHJlcSxyZXMpPT57XHJcblxyXG4gICAgY29uc3Qge2VtYWlsLG5hbWUsIHBhc3N3b3JkfSA9IHJlcS5ib2R5O1xyXG5cclxuICAgIGRhdGFiYXNlLnVzZXIucHVzaCh7XHJcbiAgICAgICAgaWQ6IGRhdGFiYXNlLnVzZXJbZGF0YWJhc2UudXNlci5sZW5ndGggLSAxXS5pZCArIDEsXHJcbiAgICAgICAgbmFtZTogbmFtZSxcclxuICAgICAgICBlbWFpbDogZW1haWwsXHJcbiAgICAgICAgcGFzc3dvcmQ6IHBhc3N3b3JkLFxyXG4gICAgICAgIGVudHJpZXM6IDAsXHJcbiAgICAgICAgam9pbmVkOiBuZXcgRGF0ZSgpXHJcbiAgICB9KTtcclxuXHJcbiAgICByZXMuanNvbihkYXRhYmFzZS51c2VyW2RhdGFiYXNlLnVzZXIubGVuZ3RoIC0gMV0pXHJcblxyXG59KTtcclxuXHJcblxyXG5hcHAucHV0KCcvaW1hZ2UnLCAocmVxLCByZXMpPT57XHJcbiAgICBjb25zdCB7aWR9ID0gcmVxLmJvZHk7XHJcbiAgICBsZXQgZm91bmQgPSBmYWxzZTtcclxuXHJcbiAgICBkYXRhYmFzZS51c2VyLmZvckVhY2godXNlciA9PntcclxuICAgICAgICBpZih1c2VyLmlkID09IGlkKXtcclxuICAgICAgICAgICAgZm91bmQgPSB0cnVlO1xyXG4gICAgICAgICAgICB1c2VyLmVudHJpZXMrKztcclxuICAgICAgICAgIHJldHVybiAgcmVzLmpzb24odXNlci5lbnRyaWVzKTtcclxuICAgICAgICB9XHJcbiAgICB9KTtcclxuXHJcbiAgICBpZighZm91bmQpe1xyXG4gICAgICAgIHJldHVybiAgcmVzLnN0YXR1cyg0MDQpLmpzb24oJ1VzZXIgTm90IEZvdW5kJyk7XHJcbiAgICB9XHJcblxyXG4gXHJcbn0pXHJcblxyXG5hcHAubGlzdGVuKHBvcnROdW1iZXIsICgpID0+e1xyXG4gICAgY29uc29sZS5sb2coYGFwcCBpcyBydW5uaW5nICR7cG9ydE51bWJlcn1gKVxyXG59KTtcclxuXHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "express",
        "bodyParser",
        "require",
        "app",
        "portNumber",
        "status",
        "Status",
        "database",
        "user",
        "id",
        "name",
        "email",
        "password",
        "entries",
        "joined",
        "Date",
        "use",
        "json",
        "get",
        "req",
        "res",
        "params",
        "found",
        "forEach",
        "post",
        "body",
        "push",
        "length",
        "put",
        "listen",
        "console",
        "log"
      ],
      "mappings": "AAAA,OAAOA,OAAP,MAAoB,SAApB;;AACA,MAAMC,UAAU,GAAGC,OAAO,CAAC,aAAD,CAA1B;;AAGA,MAAMC,GAAG,GAAGH,OAAO,EAAnB;AACA,MAAMI,UAAU,GAAG,IAAnB;AACA,MAAMC,MAAM,GAAC;AACTC,EAAAA,MAAM,EAAE;AADC,CAAb;AAIA,MAAMC,QAAQ,GAAG;AACbC,EAAAA,IAAI,EAAC,CACD;AACIC,IAAAA,EAAE,EAAE,GADR;AAEIC,IAAAA,IAAI,EAAE,MAFV;AAGIC,IAAAA,KAAK,EAAE,gBAHX;AAIIC,IAAAA,QAAQ,EAAE,MAJd;AAKIC,IAAAA,OAAO,EAAE,CALb;AAMIC,IAAAA,MAAM,EAAE,IAAIC,IAAJ;AANZ,GADC,EAUD;AACIN,IAAAA,EAAE,EAAE,GADR;AAEIC,IAAAA,IAAI,EAAE,OAFV;AAGIC,IAAAA,KAAK,EAAE,iBAHX;AAIIC,IAAAA,QAAQ,EAAE,MAJd;AAKIC,IAAAA,OAAO,EAAE,CALb;AAMIC,IAAAA,MAAM,EAAE,IAAIC,IAAJ;AANZ,GAVC;AADQ,CAAjB;AAsBAZ,GAAG,CAACa,GAAJ,CAAQf,UAAU,CAACgB,IAAX,EAAR;AAIAd,GAAG,CAACe,GAAJ,CAAQ,GAAR,EAAa,CAACC,GAAD,EAAMC,GAAN,KAAY;AACrBA,EAAAA,GAAG,CAACH,IAAJ,CAASZ,MAAT;AACH,CAFD;AAIAF,GAAG,CAACe,GAAJ,CAAQ,cAAR,EAAwB,CAACC,GAAD,EAAMC,GAAN,KAAY;AAChCA,EAAAA,GAAG,CAACH,IAAJ,CAASV,QAAQ,CAACC,IAAlB;AACH,CAFD;AAIAL,GAAG,CAACe,GAAJ,CAAQ,cAAR,EAAwB,CAACC,GAAD,EAAMC,GAAN,KAAY;AAChC,QAAM;AAACX,IAAAA;AAAD,MAAOU,GAAG,CAACE,MAAjB;AACA,MAAIC,KAAK,GAAG,KAAZ;AAEAf,EAAAA,QAAQ,CAACC,IAAT,CAAce,OAAd,CAAsBf,IAAI,IAAG;AACzB,QAAGA,IAAI,CAACC,EAAL,IAAWA,EAAd,EAAiB;AACba,MAAAA,KAAK,GAAG,IAAR;AACF,aAAQF,GAAG,CAACH,IAAJ,CAAST,IAAT,CAAR;AACD;AACJ,GALD;;AAOA,MAAG,CAACc,KAAJ,EAAU;AACN,WAAQF,GAAG,CAACf,MAAJ,CAAW,GAAX,EAAgBY,IAAhB,CAAqB,gBAArB,CAAR;AACH;;AAAA;AACJ,CAdD;AAiBAd,GAAG,CAACqB,IAAJ,CAAS,SAAT,EAAmB,CAACL,GAAD,EAAKC,GAAL,KAAW;AAC1B,MAAGD,GAAG,CAACM,IAAJ,CAASd,KAAT,KAAmBJ,QAAQ,CAACC,IAAT,CAAc,CAAd,EAAiBG,KAApC,IACCQ,GAAG,CAACM,IAAJ,CAASb,QAAT,KAAsBL,QAAQ,CAACC,IAAT,CAAc,CAAd,EAAiBI,QAD3C,EACoD;AAC5CQ,IAAAA,GAAG,CAACH,IAAJ,CAAS,QAAT;AACH,GAHL,MAGS;AACDG,IAAAA,GAAG,CAACf,MAAJ,CAAW,GAAX,EAAgBY,IAAhB,CAAqB,kBAArB;AACH;AACR,CAPD;AASAd,GAAG,CAACqB,IAAJ,CAAS,WAAT,EAAsB,CAACL,GAAD,EAAKC,GAAL,KAAW;AAE7B,QAAM;AAACT,IAAAA,KAAD;AAAOD,IAAAA,IAAP;AAAaE,IAAAA;AAAb,MAAyBO,GAAG,CAACM,IAAnC;AAEAlB,EAAAA,QAAQ,CAACC,IAAT,CAAckB,IAAd,CAAmB;AACfjB,IAAAA,EAAE,EAAEF,QAAQ,CAACC,IAAT,CAAcD,QAAQ,CAACC,IAAT,CAAcmB,MAAd,GAAuB,CAArC,EAAwClB,EAAxC,GAA6C,CADlC;AAEfC,IAAAA,IAAI,EAAEA,IAFS;AAGfC,IAAAA,KAAK,EAAEA,KAHQ;AAIfC,IAAAA,QAAQ,EAAEA,QAJK;AAKfC,IAAAA,OAAO,EAAE,CALM;AAMfC,IAAAA,MAAM,EAAE,IAAIC,IAAJ;AANO,GAAnB;AASAK,EAAAA,GAAG,CAACH,IAAJ,CAASV,QAAQ,CAACC,IAAT,CAAcD,QAAQ,CAACC,IAAT,CAAcmB,MAAd,GAAuB,CAArC,CAAT;AAEH,CAfD;AAkBAxB,GAAG,CAACyB,GAAJ,CAAQ,QAAR,EAAkB,CAACT,GAAD,EAAMC,GAAN,KAAY;AAC1B,QAAM;AAACX,IAAAA;AAAD,MAAOU,GAAG,CAACM,IAAjB;AACA,MAAIH,KAAK,GAAG,KAAZ;AAEAf,EAAAA,QAAQ,CAACC,IAAT,CAAce,OAAd,CAAsBf,IAAI,IAAG;AACzB,QAAGA,IAAI,CAACC,EAAL,IAAWA,EAAd,EAAiB;AACba,MAAAA,KAAK,GAAG,IAAR;AACAd,MAAAA,IAAI,CAACK,OAAL;AACF,aAAQO,GAAG,CAACH,IAAJ,CAAST,IAAI,CAACK,OAAd,CAAR;AACD;AACJ,GAND;;AAQA,MAAG,CAACS,KAAJ,EAAU;AACN,WAAQF,GAAG,CAACf,MAAJ,CAAW,GAAX,EAAgBY,IAAhB,CAAqB,gBAArB,CAAR;AACH;AAGJ,CAjBD;AAmBAd,GAAG,CAAC0B,MAAJ,CAAWzB,UAAX,EAAuB,MAAK;AACxB0B,EAAAA,OAAO,CAACC,GAAR,CAAa,kBAAiB3B,UAAW,EAAzC;AACH,CAFD",
      "sourceRoot": "F:\\Udemy\\Web BootCamp\\smartbrainimagedetector-api",
      "sourcesContent": [
        "import express from 'express';\r\nconst bodyParser = require('body-parser')\r\n\r\n\r\nconst app = express();\r\nconst portNumber = 3000;\r\nconst status={\r\n    Status: 'Healthy'\r\n}\r\n\r\nconst database = {\r\n    user:[\r\n        {\r\n            id: 123,\r\n            name: 'John',\r\n            email: 'john@gmail.com',\r\n            password: '1234',\r\n            entries: 0,\r\n            joined: new Date()\r\n        },\r\n\r\n        {\r\n            id: 124,\r\n            name: 'Sally',\r\n            email: 'sally@gmail.com',\r\n            password: '5678',\r\n            entries: 0,\r\n            joined: new Date()\r\n        }\r\n    ]\r\n}\r\n\r\napp.use(bodyParser.json());\r\n\r\n\r\n\r\napp.get('/', (req, res)=>{\r\n    res.json(status)\r\n})\r\n\r\napp.get('/getAllUsers', (req, res)=>{\r\n    res.json(database.user)\r\n})\r\n\r\napp.get('/profile/:id', (req, res)=>{\r\n    const {id} = req.params;\r\n    let found = false;\r\n\r\n    database.user.forEach(user =>{\r\n        if(user.id == id){\r\n            found = true;\r\n          return  res.json(user);\r\n        }\r\n    });\r\n\r\n    if(!found){\r\n        return  res.status(404).json('User Not Found');\r\n    };\r\n});\r\n\r\n\r\napp.post('/signin',(req,res)=>{\r\n    if(req.body.email === database.user[0].email && \r\n        req.body.password === database.user[0].password){\r\n            res.json('succss');\r\n        }else{\r\n            res.status(401).json('error logging in')\r\n        }\r\n});\r\n\r\napp.post('/register', (req,res)=>{\r\n\r\n    const {email,name, password} = req.body;\r\n\r\n    database.user.push({\r\n        id: database.user[database.user.length - 1].id + 1,\r\n        name: name,\r\n        email: email,\r\n        password: password,\r\n        entries: 0,\r\n        joined: new Date()\r\n    });\r\n\r\n    res.json(database.user[database.user.length - 1])\r\n\r\n});\r\n\r\n\r\napp.put('/image', (req, res)=>{\r\n    const {id} = req.body;\r\n    let found = false;\r\n\r\n    database.user.forEach(user =>{\r\n        if(user.id == id){\r\n            found = true;\r\n            user.entries++;\r\n          return  res.json(user.entries);\r\n        }\r\n    });\r\n\r\n    if(!found){\r\n        return  res.status(404).json('User Not Found');\r\n    }\r\n\r\n \r\n})\r\n\r\napp.listen(portNumber, () =>{\r\n    console.log(`app is running ${portNumber}`)\r\n});\r\n\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1562559548118
  },
  "{\"sourceRoot\":\"F:\\\\Udemy\\\\Web BootCamp\\\\smartbrainimagedetector-api\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"F:\\\\Udemy\\\\Web BootCamp\\\\smartbrainimagedetector-api\",\"filename\":\"F:\\\\Udemy\\\\Web BootCamp\\\\smartbrainimagedetector-api\\\\server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"F:\\\\Udemy\\\\Web BootCamp\\\\smartbrainimagedetector-api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "F:\\Udemy\\Web BootCamp\\smartbrainimagedetector-api",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "F:\\Udemy\\Web BootCamp\\smartbrainimagedetector-api",
      "filename": "F:\\Udemy\\Web BootCamp\\smartbrainimagedetector-api\\server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "F:\\Udemy\\Web BootCamp\\smartbrainimagedetector-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "F:\\Udemy\\Web BootCamp\\smartbrainimagedetector-api\\server.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "F:\\Udemy\\Web BootCamp\\smartbrainimagedetector-api\\server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "F:\\Udemy\\Web BootCamp\\smartbrainimagedetector-api",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _knex = _interopRequireDefault(require(\"knex\"));\n\nvar _bcryptNodejs = _interopRequireDefault(require(\"bcrypt-nodejs\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar app = (0, _express[\"default\"])();\nvar portNumber = 3000;\nvar status = {\n  Status: 'Healthy'\n};\nvar db = (0, _knex[\"default\"])({\n  client: 'pg',\n  connection: {\n    host: '127.0.0.1',\n    user: 'postgres',\n    password: 'AMber_8605',\n    database: 'test'\n  }\n});\napp.use((0, _cors[\"default\"])());\napp.use(_bodyParser[\"default\"].json());\napp.get('/', function (req, res) {\n  res.json(status);\n});\napp.get('/getAllUsers', function (req, res) {\n  db.select('*').from('users').then(function (users) {\n    return res.json(users);\n  });\n});\napp.get('/profile/:id', function (req, res) {\n  var id = req.params.id;\n  db.select('*').from('users').where({\n    id: id\n  }).then(function (user) {\n    if (user.length) {\n      res.json(user[0]);\n    } else {\n      res.status(404).json('Not Found');\n    }\n  })[\"catch\"](function (err) {\n    return res.status(400).json('error getting user');\n  });\n});\napp.post('/signIn', function (req, res) {\n  var _req$body = req.body,\n      email = _req$body.email,\n      password = _req$body.password;\n  db.select('email', 'hash').from('login').where('email', '=', email).then(function (data) {\n    var isVaild = _bcryptNodejs[\"default\"].compareSync(password, data[0].hash);\n\n    if (isVaild) {\n      return db.select('*').from('users').where('email', '=', email).then(function (user) {\n        res.json(user[0]);\n      })[\"catch\"](function (err) {\n        return res.status(404).json('unable to get user');\n      });\n    } else {\n      res.status(401).json('Not Authorized');\n    }\n  });\n});\napp.post('/register', function (req, res) {\n  var _req$body2 = req.body,\n      email = _req$body2.email,\n      name = _req$body2.name,\n      password = _req$body2.password;\n\n  var hash = _bcryptNodejs[\"default\"].hashSync(password);\n\n  db.transaction(function (trx) {\n    trx.insert({\n      hash: hash,\n      email: email\n    }).into('login').returning('email').then(function (loginEmail) {\n      return trx('users').returning('*').insert({\n        email: loginEmail[0],\n        name: name,\n        joined: new Date()\n      }).then(function (user) {\n        res.json(user[0]);\n      });\n    }).then(trx.commit)[\"catch\"](trx.rollback);\n  })[\"catch\"](function (err) {\n    return res.status(400).json('Unable to register');\n  });\n});\napp.put('/image', function (req, res) {\n  var id = req.body.id;\n  db('users').where('id', '=', id).increment('entries', 1).returning('entries').then(function (entries) {\n    res.json([entries[0]]);\n  })[\"catch\"](function (err) {\n    return res.status(400).json(\"unable to get entries\");\n  });\n});\napp.listen(portNumber, function () {\n  console.log(\"app is running \".concat(portNumber));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "app",
        "portNumber",
        "status",
        "Status",
        "db",
        "client",
        "connection",
        "host",
        "user",
        "password",
        "database",
        "use",
        "bodyParser",
        "json",
        "get",
        "req",
        "res",
        "select",
        "from",
        "then",
        "users",
        "id",
        "params",
        "where",
        "length",
        "err",
        "post",
        "body",
        "email",
        "data",
        "isVaild",
        "bcrypt",
        "compareSync",
        "hash",
        "name",
        "hashSync",
        "transaction",
        "trx",
        "insert",
        "into",
        "returning",
        "loginEmail",
        "joined",
        "Date",
        "commit",
        "rollback",
        "put",
        "increment",
        "entries",
        "listen",
        "console",
        "log"
      ],
      "mappings": "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",
      "sourceRoot": "F:\\Udemy\\Web BootCamp\\smartbrainimagedetector-api",
      "sourcesContent": [
        "import express from 'express';\r\nimport bodyParser from 'body-parser';\r\nimport cors from 'cors';\r\nimport knex from 'knex';\r\nimport bcrypt from 'bcrypt-nodejs';\r\n\r\n\r\nconst app = express();\r\nconst portNumber = 3000;\r\nconst status={\r\n    Status: 'Healthy'\r\n}\r\n\r\nconst db = knex({\r\n    client:'pg',\r\n    connection: {\r\n        host:'127.0.0.1',\r\n        user: 'postgres',\r\n        password:'AMber_8605',\r\n        database: 'test'\r\n    }\r\n})\r\n\r\napp.use(cors())\r\napp.use(bodyParser.json());\r\n\r\n\r\n\r\napp.get('/', (req, res)=>{\r\n    res.json(status)\r\n})\r\n\r\napp.get('/getAllUsers', (req, res)=>{\r\n    db.select('*').from('users').then(users =>\r\n        res.json(users));\r\n})\r\n\r\napp.get('/profile/:id', (req, res)=>{\r\n    const {id} = req.params;\r\n    db.select('*').from('users').where({id})\r\n    .then(user => {\r\n        if(user.length){\r\n            res.json(user[0])\r\n        }else{\r\n            res.status(404).json('Not Found')\r\n        }\r\n   \r\n    }).catch(err=> res.status(400).json('error getting user'));\r\n});\r\n\r\n\r\napp.post('/signIn',(req,res)=>{\r\n    const {email, password} = req.body;\r\n   db.select('email', 'hash').from('login')\r\n   .where('email', '=', email)\r\n   .then(data => {\r\n    const isVaild = bcrypt.compareSync(password, data[0].hash)\r\n    if(isVaild){\r\n    return db.select('*').from('users')\r\n        .where('email', '=', email)\r\n        .then(user => {\r\n            res.json(user[0])\r\n        })\r\n        .catch(err => res.status(404).json('unable to get user'))\r\n    }else{\r\n        res.status(401).json('Not Authorized')\r\n    }\r\n   })\r\n});\r\n\r\napp.post('/register', (req,res)=>{\r\n\r\n    const {email,name, password} = req.body;\r\n    const hash = bcrypt.hashSync(password);\r\n    db.transaction(trx =>{\r\n        trx.insert({\r\n            hash:hash,\r\n            email:email\r\n        })\r\n        .into('login')\r\n        .returning('email')\r\n        .then(loginEmail => {\r\n            return trx('users').returning('*').insert({\r\n                email: loginEmail[0],\r\n                name: name,\r\n                joined: new Date()\r\n            }).then(user => {\r\n                res.json(user[0])\r\n            })\r\n        })\r\n        .then(trx.commit)\r\n        .catch(trx.rollback)\r\n    }).catch(err => res.status(400).json('Unable to register'))\r\n\r\n\r\n\r\n});\r\n\r\n\r\napp.put('/image', (req, res)=>{\r\n    const {id} = req.body;\r\n    db('users').where('id', '=', id)\r\n    .increment('entries', 1)\r\n    .returning('entries')\r\n    .then(entries => {\r\n        res.json([entries[0]])\r\n    })\r\n    .catch(err => res.status(400).json(\"unable to get entries\"))\r\n \r\n})\r\n\r\napp.listen(portNumber, () =>{\r\n    console.log(`app is running ${portNumber}`)\r\n});\r\n\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1562814825332
  }
}