{
  "{\"sourceRoot\":\"F:\\\\Udemy\\\\Web BootCamp\\\\smartbrainimagedetector-api\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"F:\\\\Udemy\\\\Web BootCamp\\\\smartbrainimagedetector-api\",\"filename\":\"F:\\\\Udemy\\\\Web BootCamp\\\\smartbrainimagedetector-api\\\\server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"F:\\\\Udemy\\\\Web BootCamp\\\\smartbrainimagedetector-api\",\"plugins\":[],\"presets\":[]}:7.5.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "F:\\Udemy\\Web BootCamp\\smartbrainimagedetector-api",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "F:\\Udemy\\Web BootCamp\\smartbrainimagedetector-api",
      "filename": "F:\\Udemy\\Web BootCamp\\smartbrainimagedetector-api\\server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "F:\\Udemy\\Web BootCamp\\smartbrainimagedetector-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "F:\\Udemy\\Web BootCamp\\smartbrainimagedetector-api\\server.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "F:\\Udemy\\Web BootCamp\\smartbrainimagedetector-api\\server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "F:\\Udemy\\Web BootCamp\\smartbrainimagedetector-api",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "import express from 'express';\n\nconst bodyParser = require('body-parser');\n\nconst app = express();\nconst portNumber = 3000;\nconst status = {\n  Status: 'Healthy'\n};\nconst database = {\n  user: [{\n    id: 123,\n    name: 'John',\n    email: 'john@gmail.com',\n    password: '1234',\n    entries: 0,\n    joined: new Date()\n  }, {\n    id: 124,\n    name: 'Sally',\n    email: 'sally@gmail.com',\n    password: '5678',\n    entries: 0,\n    joined: new Date()\n  }]\n};\napp.use(bodyParser.json());\napp.get('/', (req, res) => {\n  res.json(status);\n});\napp.get('/getAllUsers', (req, res) => {\n  res.json(database.user);\n});\napp.get('/profile/:id', (req, res) => {\n  const {\n    id\n  } = req.params;\n  let found = false;\n  database.user.forEach(user => {\n    if (user.id == id) {\n      found = true;\n      return res.json(user);\n    }\n  });\n\n  if (!found) {\n    return res.status(404).json('User Not Found');\n  }\n\n  ;\n});\napp.post('/signin', (req, res) => {\n  if (req.body.email === database.user[0].email && req.body.password === database.user[0].password) {\n    res.json('succss');\n  } else {\n    res.status(401).json('error logging in');\n  }\n});\napp.post('/register', (req, res) => {\n  const {\n    email,\n    name,\n    password\n  } = req.body;\n  database.user.push({\n    id: database.user[database.user.length - 1].id + 1,\n    name: name,\n    email: email,\n    password: password,\n    entries: 0,\n    joined: new Date()\n  });\n  res.json(database.user[database.user.length - 1]);\n});\napp.put('/image', (req, res) => {\n  const {\n    id\n  } = req.body;\n  let found = false;\n  database.user.forEach(user => {\n    if (user.id == id) {\n      found = true;\n      user.entries++;\n      return res.json(user.entries);\n    }\n  });\n\n  if (!found) {\n    return res.status(404).json('User Not Found');\n  }\n});\napp.listen(portNumber, () => {\n  console.log(`app is running ${portNumber}`);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwiYm9keVBhcnNlciIsInJlcXVpcmUiLCJhcHAiLCJwb3J0TnVtYmVyIiwic3RhdHVzIiwiU3RhdHVzIiwiZGF0YWJhc2UiLCJ1c2VyIiwiaWQiLCJuYW1lIiwiZW1haWwiLCJwYXNzd29yZCIsImVudHJpZXMiLCJqb2luZWQiLCJEYXRlIiwidXNlIiwianNvbiIsImdldCIsInJlcSIsInJlcyIsInBhcmFtcyIsImZvdW5kIiwiZm9yRWFjaCIsInBvc3QiLCJib2R5IiwicHVzaCIsImxlbmd0aCIsInB1dCIsImxpc3RlbiIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiJBQUFBLE9BQU9BLE9BQVAsTUFBb0IsU0FBcEI7O0FBQ0EsTUFBTUMsVUFBVSxHQUFHQyxPQUFPLENBQUMsYUFBRCxDQUExQjs7QUFHQSxNQUFNQyxHQUFHLEdBQUdILE9BQU8sRUFBbkI7QUFDQSxNQUFNSSxVQUFVLEdBQUcsSUFBbkI7QUFDQSxNQUFNQyxNQUFNLEdBQUM7QUFDVEMsRUFBQUEsTUFBTSxFQUFFO0FBREMsQ0FBYjtBQUlBLE1BQU1DLFFBQVEsR0FBRztBQUNiQyxFQUFBQSxJQUFJLEVBQUMsQ0FDRDtBQUNJQyxJQUFBQSxFQUFFLEVBQUUsR0FEUjtBQUVJQyxJQUFBQSxJQUFJLEVBQUUsTUFGVjtBQUdJQyxJQUFBQSxLQUFLLEVBQUUsZ0JBSFg7QUFJSUMsSUFBQUEsUUFBUSxFQUFFLE1BSmQ7QUFLSUMsSUFBQUEsT0FBTyxFQUFFLENBTGI7QUFNSUMsSUFBQUEsTUFBTSxFQUFFLElBQUlDLElBQUo7QUFOWixHQURDLEVBVUQ7QUFDSU4sSUFBQUEsRUFBRSxFQUFFLEdBRFI7QUFFSUMsSUFBQUEsSUFBSSxFQUFFLE9BRlY7QUFHSUMsSUFBQUEsS0FBSyxFQUFFLGlCQUhYO0FBSUlDLElBQUFBLFFBQVEsRUFBRSxNQUpkO0FBS0lDLElBQUFBLE9BQU8sRUFBRSxDQUxiO0FBTUlDLElBQUFBLE1BQU0sRUFBRSxJQUFJQyxJQUFKO0FBTlosR0FWQztBQURRLENBQWpCO0FBc0JBWixHQUFHLENBQUNhLEdBQUosQ0FBUWYsVUFBVSxDQUFDZ0IsSUFBWCxFQUFSO0FBSUFkLEdBQUcsQ0FBQ2UsR0FBSixDQUFRLEdBQVIsRUFBYSxDQUFDQyxHQUFELEVBQU1DLEdBQU4sS0FBWTtBQUNyQkEsRUFBQUEsR0FBRyxDQUFDSCxJQUFKLENBQVNaLE1BQVQ7QUFDSCxDQUZEO0FBSUFGLEdBQUcsQ0FBQ2UsR0FBSixDQUFRLGNBQVIsRUFBd0IsQ0FBQ0MsR0FBRCxFQUFNQyxHQUFOLEtBQVk7QUFDaENBLEVBQUFBLEdBQUcsQ0FBQ0gsSUFBSixDQUFTVixRQUFRLENBQUNDLElBQWxCO0FBQ0gsQ0FGRDtBQUlBTCxHQUFHLENBQUNlLEdBQUosQ0FBUSxjQUFSLEVBQXdCLENBQUNDLEdBQUQsRUFBTUMsR0FBTixLQUFZO0FBQ2hDLFFBQU07QUFBQ1gsSUFBQUE7QUFBRCxNQUFPVSxHQUFHLENBQUNFLE1BQWpCO0FBQ0EsTUFBSUMsS0FBSyxHQUFHLEtBQVo7QUFFQWYsRUFBQUEsUUFBUSxDQUFDQyxJQUFULENBQWNlLE9BQWQsQ0FBc0JmLElBQUksSUFBRztBQUN6QixRQUFHQSxJQUFJLENBQUNDLEVBQUwsSUFBV0EsRUFBZCxFQUFpQjtBQUNiYSxNQUFBQSxLQUFLLEdBQUcsSUFBUjtBQUNGLGFBQVFGLEdBQUcsQ0FBQ0gsSUFBSixDQUFTVCxJQUFULENBQVI7QUFDRDtBQUNKLEdBTEQ7O0FBT0EsTUFBRyxDQUFDYyxLQUFKLEVBQVU7QUFDTixXQUFRRixHQUFHLENBQUNmLE1BQUosQ0FBVyxHQUFYLEVBQWdCWSxJQUFoQixDQUFxQixnQkFBckIsQ0FBUjtBQUNIOztBQUFBO0FBQ0osQ0FkRDtBQWlCQWQsR0FBRyxDQUFDcUIsSUFBSixDQUFTLFNBQVQsRUFBbUIsQ0FBQ0wsR0FBRCxFQUFLQyxHQUFMLEtBQVc7QUFDMUIsTUFBR0QsR0FBRyxDQUFDTSxJQUFKLENBQVNkLEtBQVQsS0FBbUJKLFFBQVEsQ0FBQ0MsSUFBVCxDQUFjLENBQWQsRUFBaUJHLEtBQXBDLElBQ0NRLEdBQUcsQ0FBQ00sSUFBSixDQUFTYixRQUFULEtBQXNCTCxRQUFRLENBQUNDLElBQVQsQ0FBYyxDQUFkLEVBQWlCSSxRQUQzQyxFQUNvRDtBQUM1Q1EsSUFBQUEsR0FBRyxDQUFDSCxJQUFKLENBQVMsUUFBVDtBQUNILEdBSEwsTUFHUztBQUNERyxJQUFBQSxHQUFHLENBQUNmLE1BQUosQ0FBVyxHQUFYLEVBQWdCWSxJQUFoQixDQUFxQixrQkFBckI7QUFDSDtBQUNSLENBUEQ7QUFTQWQsR0FBRyxDQUFDcUIsSUFBSixDQUFTLFdBQVQsRUFBc0IsQ0FBQ0wsR0FBRCxFQUFLQyxHQUFMLEtBQVc7QUFFN0IsUUFBTTtBQUFDVCxJQUFBQSxLQUFEO0FBQU9ELElBQUFBLElBQVA7QUFBYUUsSUFBQUE7QUFBYixNQUF5Qk8sR0FBRyxDQUFDTSxJQUFuQztBQUVBbEIsRUFBQUEsUUFBUSxDQUFDQyxJQUFULENBQWNrQixJQUFkLENBQW1CO0FBQ2ZqQixJQUFBQSxFQUFFLEVBQUVGLFFBQVEsQ0FBQ0MsSUFBVCxDQUFjRCxRQUFRLENBQUNDLElBQVQsQ0FBY21CLE1BQWQsR0FBdUIsQ0FBckMsRUFBd0NsQixFQUF4QyxHQUE2QyxDQURsQztBQUVmQyxJQUFBQSxJQUFJLEVBQUVBLElBRlM7QUFHZkMsSUFBQUEsS0FBSyxFQUFFQSxLQUhRO0FBSWZDLElBQUFBLFFBQVEsRUFBRUEsUUFKSztBQUtmQyxJQUFBQSxPQUFPLEVBQUUsQ0FMTTtBQU1mQyxJQUFBQSxNQUFNLEVBQUUsSUFBSUMsSUFBSjtBQU5PLEdBQW5CO0FBU0FLLEVBQUFBLEdBQUcsQ0FBQ0gsSUFBSixDQUFTVixRQUFRLENBQUNDLElBQVQsQ0FBY0QsUUFBUSxDQUFDQyxJQUFULENBQWNtQixNQUFkLEdBQXVCLENBQXJDLENBQVQ7QUFFSCxDQWZEO0FBa0JBeEIsR0FBRyxDQUFDeUIsR0FBSixDQUFRLFFBQVIsRUFBa0IsQ0FBQ1QsR0FBRCxFQUFNQyxHQUFOLEtBQVk7QUFDMUIsUUFBTTtBQUFDWCxJQUFBQTtBQUFELE1BQU9VLEdBQUcsQ0FBQ00sSUFBakI7QUFDQSxNQUFJSCxLQUFLLEdBQUcsS0FBWjtBQUVBZixFQUFBQSxRQUFRLENBQUNDLElBQVQsQ0FBY2UsT0FBZCxDQUFzQmYsSUFBSSxJQUFHO0FBQ3pCLFFBQUdBLElBQUksQ0FBQ0MsRUFBTCxJQUFXQSxFQUFkLEVBQWlCO0FBQ2JhLE1BQUFBLEtBQUssR0FBRyxJQUFSO0FBQ0FkLE1BQUFBLElBQUksQ0FBQ0ssT0FBTDtBQUNGLGFBQVFPLEdBQUcsQ0FBQ0gsSUFBSixDQUFTVCxJQUFJLENBQUNLLE9BQWQsQ0FBUjtBQUNEO0FBQ0osR0FORDs7QUFRQSxNQUFHLENBQUNTLEtBQUosRUFBVTtBQUNOLFdBQVFGLEdBQUcsQ0FBQ2YsTUFBSixDQUFXLEdBQVgsRUFBZ0JZLElBQWhCLENBQXFCLGdCQUFyQixDQUFSO0FBQ0g7QUFHSixDQWpCRDtBQW1CQWQsR0FBRyxDQUFDMEIsTUFBSixDQUFXekIsVUFBWCxFQUF1QixNQUFLO0FBQ3hCMEIsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQWEsa0JBQWlCM0IsVUFBVyxFQUF6QztBQUNILENBRkQiLCJzb3VyY2VSb290IjoiRjpcXFVkZW15XFxXZWIgQm9vdENhbXBcXHNtYXJ0YnJhaW5pbWFnZWRldGVjdG9yLWFwaSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xyXG5jb25zdCBib2R5UGFyc2VyID0gcmVxdWlyZSgnYm9keS1wYXJzZXInKVxyXG5cclxuXHJcbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcclxuY29uc3QgcG9ydE51bWJlciA9IDMwMDA7XHJcbmNvbnN0IHN0YXR1cz17XHJcbiAgICBTdGF0dXM6ICdIZWFsdGh5J1xyXG59XHJcblxyXG5jb25zdCBkYXRhYmFzZSA9IHtcclxuICAgIHVzZXI6W1xyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgaWQ6IDEyMyxcclxuICAgICAgICAgICAgbmFtZTogJ0pvaG4nLFxyXG4gICAgICAgICAgICBlbWFpbDogJ2pvaG5AZ21haWwuY29tJyxcclxuICAgICAgICAgICAgcGFzc3dvcmQ6ICcxMjM0JyxcclxuICAgICAgICAgICAgZW50cmllczogMCxcclxuICAgICAgICAgICAgam9pbmVkOiBuZXcgRGF0ZSgpXHJcbiAgICAgICAgfSxcclxuXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBpZDogMTI0LFxyXG4gICAgICAgICAgICBuYW1lOiAnU2FsbHknLFxyXG4gICAgICAgICAgICBlbWFpbDogJ3NhbGx5QGdtYWlsLmNvbScsXHJcbiAgICAgICAgICAgIHBhc3N3b3JkOiAnNTY3OCcsXHJcbiAgICAgICAgICAgIGVudHJpZXM6IDAsXHJcbiAgICAgICAgICAgIGpvaW5lZDogbmV3IERhdGUoKVxyXG4gICAgICAgIH1cclxuICAgIF1cclxufVxyXG5cclxuYXBwLnVzZShib2R5UGFyc2VyLmpzb24oKSk7XHJcblxyXG5cclxuXHJcbmFwcC5nZXQoJy8nLCAocmVxLCByZXMpPT57XHJcbiAgICByZXMuanNvbihzdGF0dXMpXHJcbn0pXHJcblxyXG5hcHAuZ2V0KCcvZ2V0QWxsVXNlcnMnLCAocmVxLCByZXMpPT57XHJcbiAgICByZXMuanNvbihkYXRhYmFzZS51c2VyKVxyXG59KVxyXG5cclxuYXBwLmdldCgnL3Byb2ZpbGUvOmlkJywgKHJlcSwgcmVzKT0+e1xyXG4gICAgY29uc3Qge2lkfSA9IHJlcS5wYXJhbXM7XHJcbiAgICBsZXQgZm91bmQgPSBmYWxzZTtcclxuXHJcbiAgICBkYXRhYmFzZS51c2VyLmZvckVhY2godXNlciA9PntcclxuICAgICAgICBpZih1c2VyLmlkID09IGlkKXtcclxuICAgICAgICAgICAgZm91bmQgPSB0cnVlO1xyXG4gICAgICAgICAgcmV0dXJuICByZXMuanNvbih1c2VyKTtcclxuICAgICAgICB9XHJcbiAgICB9KTtcclxuXHJcbiAgICBpZighZm91bmQpe1xyXG4gICAgICAgIHJldHVybiAgcmVzLnN0YXR1cyg0MDQpLmpzb24oJ1VzZXIgTm90IEZvdW5kJyk7XHJcbiAgICB9O1xyXG59KTtcclxuXHJcblxyXG5hcHAucG9zdCgnL3NpZ25pbicsKHJlcSxyZXMpPT57XHJcbiAgICBpZihyZXEuYm9keS5lbWFpbCA9PT0gZGF0YWJhc2UudXNlclswXS5lbWFpbCAmJiBcclxuICAgICAgICByZXEuYm9keS5wYXNzd29yZCA9PT0gZGF0YWJhc2UudXNlclswXS5wYXNzd29yZCl7XHJcbiAgICAgICAgICAgIHJlcy5qc29uKCdzdWNjc3MnKTtcclxuICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgcmVzLnN0YXR1cyg0MDEpLmpzb24oJ2Vycm9yIGxvZ2dpbmcgaW4nKVxyXG4gICAgICAgIH1cclxufSk7XHJcblxyXG5hcHAucG9zdCgnL3JlZ2lzdGVyJywgKHJlcSxyZXMpPT57XHJcblxyXG4gICAgY29uc3Qge2VtYWlsLG5hbWUsIHBhc3N3b3JkfSA9IHJlcS5ib2R5O1xyXG5cclxuICAgIGRhdGFiYXNlLnVzZXIucHVzaCh7XHJcbiAgICAgICAgaWQ6IGRhdGFiYXNlLnVzZXJbZGF0YWJhc2UudXNlci5sZW5ndGggLSAxXS5pZCArIDEsXHJcbiAgICAgICAgbmFtZTogbmFtZSxcclxuICAgICAgICBlbWFpbDogZW1haWwsXHJcbiAgICAgICAgcGFzc3dvcmQ6IHBhc3N3b3JkLFxyXG4gICAgICAgIGVudHJpZXM6IDAsXHJcbiAgICAgICAgam9pbmVkOiBuZXcgRGF0ZSgpXHJcbiAgICB9KTtcclxuXHJcbiAgICByZXMuanNvbihkYXRhYmFzZS51c2VyW2RhdGFiYXNlLnVzZXIubGVuZ3RoIC0gMV0pXHJcblxyXG59KTtcclxuXHJcblxyXG5hcHAucHV0KCcvaW1hZ2UnLCAocmVxLCByZXMpPT57XHJcbiAgICBjb25zdCB7aWR9ID0gcmVxLmJvZHk7XHJcbiAgICBsZXQgZm91bmQgPSBmYWxzZTtcclxuXHJcbiAgICBkYXRhYmFzZS51c2VyLmZvckVhY2godXNlciA9PntcclxuICAgICAgICBpZih1c2VyLmlkID09IGlkKXtcclxuICAgICAgICAgICAgZm91bmQgPSB0cnVlO1xyXG4gICAgICAgICAgICB1c2VyLmVudHJpZXMrKztcclxuICAgICAgICAgIHJldHVybiAgcmVzLmpzb24odXNlci5lbnRyaWVzKTtcclxuICAgICAgICB9XHJcbiAgICB9KTtcclxuXHJcbiAgICBpZighZm91bmQpe1xyXG4gICAgICAgIHJldHVybiAgcmVzLnN0YXR1cyg0MDQpLmpzb24oJ1VzZXIgTm90IEZvdW5kJyk7XHJcbiAgICB9XHJcblxyXG4gXHJcbn0pXHJcblxyXG5hcHAubGlzdGVuKHBvcnROdW1iZXIsICgpID0+e1xyXG4gICAgY29uc29sZS5sb2coYGFwcCBpcyBydW5uaW5nICR7cG9ydE51bWJlcn1gKVxyXG59KTtcclxuXHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "express",
        "bodyParser",
        "require",
        "app",
        "portNumber",
        "status",
        "Status",
        "database",
        "user",
        "id",
        "name",
        "email",
        "password",
        "entries",
        "joined",
        "Date",
        "use",
        "json",
        "get",
        "req",
        "res",
        "params",
        "found",
        "forEach",
        "post",
        "body",
        "push",
        "length",
        "put",
        "listen",
        "console",
        "log"
      ],
      "mappings": "AAAA,OAAOA,OAAP,MAAoB,SAApB;;AACA,MAAMC,UAAU,GAAGC,OAAO,CAAC,aAAD,CAA1B;;AAGA,MAAMC,GAAG,GAAGH,OAAO,EAAnB;AACA,MAAMI,UAAU,GAAG,IAAnB;AACA,MAAMC,MAAM,GAAC;AACTC,EAAAA,MAAM,EAAE;AADC,CAAb;AAIA,MAAMC,QAAQ,GAAG;AACbC,EAAAA,IAAI,EAAC,CACD;AACIC,IAAAA,EAAE,EAAE,GADR;AAEIC,IAAAA,IAAI,EAAE,MAFV;AAGIC,IAAAA,KAAK,EAAE,gBAHX;AAIIC,IAAAA,QAAQ,EAAE,MAJd;AAKIC,IAAAA,OAAO,EAAE,CALb;AAMIC,IAAAA,MAAM,EAAE,IAAIC,IAAJ;AANZ,GADC,EAUD;AACIN,IAAAA,EAAE,EAAE,GADR;AAEIC,IAAAA,IAAI,EAAE,OAFV;AAGIC,IAAAA,KAAK,EAAE,iBAHX;AAIIC,IAAAA,QAAQ,EAAE,MAJd;AAKIC,IAAAA,OAAO,EAAE,CALb;AAMIC,IAAAA,MAAM,EAAE,IAAIC,IAAJ;AANZ,GAVC;AADQ,CAAjB;AAsBAZ,GAAG,CAACa,GAAJ,CAAQf,UAAU,CAACgB,IAAX,EAAR;AAIAd,GAAG,CAACe,GAAJ,CAAQ,GAAR,EAAa,CAACC,GAAD,EAAMC,GAAN,KAAY;AACrBA,EAAAA,GAAG,CAACH,IAAJ,CAASZ,MAAT;AACH,CAFD;AAIAF,GAAG,CAACe,GAAJ,CAAQ,cAAR,EAAwB,CAACC,GAAD,EAAMC,GAAN,KAAY;AAChCA,EAAAA,GAAG,CAACH,IAAJ,CAASV,QAAQ,CAACC,IAAlB;AACH,CAFD;AAIAL,GAAG,CAACe,GAAJ,CAAQ,cAAR,EAAwB,CAACC,GAAD,EAAMC,GAAN,KAAY;AAChC,QAAM;AAACX,IAAAA;AAAD,MAAOU,GAAG,CAACE,MAAjB;AACA,MAAIC,KAAK,GAAG,KAAZ;AAEAf,EAAAA,QAAQ,CAACC,IAAT,CAAce,OAAd,CAAsBf,IAAI,IAAG;AACzB,QAAGA,IAAI,CAACC,EAAL,IAAWA,EAAd,EAAiB;AACba,MAAAA,KAAK,GAAG,IAAR;AACF,aAAQF,GAAG,CAACH,IAAJ,CAAST,IAAT,CAAR;AACD;AACJ,GALD;;AAOA,MAAG,CAACc,KAAJ,EAAU;AACN,WAAQF,GAAG,CAACf,MAAJ,CAAW,GAAX,EAAgBY,IAAhB,CAAqB,gBAArB,CAAR;AACH;;AAAA;AACJ,CAdD;AAiBAd,GAAG,CAACqB,IAAJ,CAAS,SAAT,EAAmB,CAACL,GAAD,EAAKC,GAAL,KAAW;AAC1B,MAAGD,GAAG,CAACM,IAAJ,CAASd,KAAT,KAAmBJ,QAAQ,CAACC,IAAT,CAAc,CAAd,EAAiBG,KAApC,IACCQ,GAAG,CAACM,IAAJ,CAASb,QAAT,KAAsBL,QAAQ,CAACC,IAAT,CAAc,CAAd,EAAiBI,QAD3C,EACoD;AAC5CQ,IAAAA,GAAG,CAACH,IAAJ,CAAS,QAAT;AACH,GAHL,MAGS;AACDG,IAAAA,GAAG,CAACf,MAAJ,CAAW,GAAX,EAAgBY,IAAhB,CAAqB,kBAArB;AACH;AACR,CAPD;AASAd,GAAG,CAACqB,IAAJ,CAAS,WAAT,EAAsB,CAACL,GAAD,EAAKC,GAAL,KAAW;AAE7B,QAAM;AAACT,IAAAA,KAAD;AAAOD,IAAAA,IAAP;AAAaE,IAAAA;AAAb,MAAyBO,GAAG,CAACM,IAAnC;AAEAlB,EAAAA,QAAQ,CAACC,IAAT,CAAckB,IAAd,CAAmB;AACfjB,IAAAA,EAAE,EAAEF,QAAQ,CAACC,IAAT,CAAcD,QAAQ,CAACC,IAAT,CAAcmB,MAAd,GAAuB,CAArC,EAAwClB,EAAxC,GAA6C,CADlC;AAEfC,IAAAA,IAAI,EAAEA,IAFS;AAGfC,IAAAA,KAAK,EAAEA,KAHQ;AAIfC,IAAAA,QAAQ,EAAEA,QAJK;AAKfC,IAAAA,OAAO,EAAE,CALM;AAMfC,IAAAA,MAAM,EAAE,IAAIC,IAAJ;AANO,GAAnB;AASAK,EAAAA,GAAG,CAACH,IAAJ,CAASV,QAAQ,CAACC,IAAT,CAAcD,QAAQ,CAACC,IAAT,CAAcmB,MAAd,GAAuB,CAArC,CAAT;AAEH,CAfD;AAkBAxB,GAAG,CAACyB,GAAJ,CAAQ,QAAR,EAAkB,CAACT,GAAD,EAAMC,GAAN,KAAY;AAC1B,QAAM;AAACX,IAAAA;AAAD,MAAOU,GAAG,CAACM,IAAjB;AACA,MAAIH,KAAK,GAAG,KAAZ;AAEAf,EAAAA,QAAQ,CAACC,IAAT,CAAce,OAAd,CAAsBf,IAAI,IAAG;AACzB,QAAGA,IAAI,CAACC,EAAL,IAAWA,EAAd,EAAiB;AACba,MAAAA,KAAK,GAAG,IAAR;AACAd,MAAAA,IAAI,CAACK,OAAL;AACF,aAAQO,GAAG,CAACH,IAAJ,CAAST,IAAI,CAACK,OAAd,CAAR;AACD;AACJ,GAND;;AAQA,MAAG,CAACS,KAAJ,EAAU;AACN,WAAQF,GAAG,CAACf,MAAJ,CAAW,GAAX,EAAgBY,IAAhB,CAAqB,gBAArB,CAAR;AACH;AAGJ,CAjBD;AAmBAd,GAAG,CAAC0B,MAAJ,CAAWzB,UAAX,EAAuB,MAAK;AACxB0B,EAAAA,OAAO,CAACC,GAAR,CAAa,kBAAiB3B,UAAW,EAAzC;AACH,CAFD",
      "sourceRoot": "F:\\Udemy\\Web BootCamp\\smartbrainimagedetector-api",
      "sourcesContent": [
        "import express from 'express';\r\nconst bodyParser = require('body-parser')\r\n\r\n\r\nconst app = express();\r\nconst portNumber = 3000;\r\nconst status={\r\n    Status: 'Healthy'\r\n}\r\n\r\nconst database = {\r\n    user:[\r\n        {\r\n            id: 123,\r\n            name: 'John',\r\n            email: 'john@gmail.com',\r\n            password: '1234',\r\n            entries: 0,\r\n            joined: new Date()\r\n        },\r\n\r\n        {\r\n            id: 124,\r\n            name: 'Sally',\r\n            email: 'sally@gmail.com',\r\n            password: '5678',\r\n            entries: 0,\r\n            joined: new Date()\r\n        }\r\n    ]\r\n}\r\n\r\napp.use(bodyParser.json());\r\n\r\n\r\n\r\napp.get('/', (req, res)=>{\r\n    res.json(status)\r\n})\r\n\r\napp.get('/getAllUsers', (req, res)=>{\r\n    res.json(database.user)\r\n})\r\n\r\napp.get('/profile/:id', (req, res)=>{\r\n    const {id} = req.params;\r\n    let found = false;\r\n\r\n    database.user.forEach(user =>{\r\n        if(user.id == id){\r\n            found = true;\r\n          return  res.json(user);\r\n        }\r\n    });\r\n\r\n    if(!found){\r\n        return  res.status(404).json('User Not Found');\r\n    };\r\n});\r\n\r\n\r\napp.post('/signin',(req,res)=>{\r\n    if(req.body.email === database.user[0].email && \r\n        req.body.password === database.user[0].password){\r\n            res.json('succss');\r\n        }else{\r\n            res.status(401).json('error logging in')\r\n        }\r\n});\r\n\r\napp.post('/register', (req,res)=>{\r\n\r\n    const {email,name, password} = req.body;\r\n\r\n    database.user.push({\r\n        id: database.user[database.user.length - 1].id + 1,\r\n        name: name,\r\n        email: email,\r\n        password: password,\r\n        entries: 0,\r\n        joined: new Date()\r\n    });\r\n\r\n    res.json(database.user[database.user.length - 1])\r\n\r\n});\r\n\r\n\r\napp.put('/image', (req, res)=>{\r\n    const {id} = req.body;\r\n    let found = false;\r\n\r\n    database.user.forEach(user =>{\r\n        if(user.id == id){\r\n            found = true;\r\n            user.entries++;\r\n          return  res.json(user.entries);\r\n        }\r\n    });\r\n\r\n    if(!found){\r\n        return  res.status(404).json('User Not Found');\r\n    }\r\n\r\n \r\n})\r\n\r\napp.listen(portNumber, () =>{\r\n    console.log(`app is running ${portNumber}`)\r\n});\r\n\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1562559548118
  },
  "{\"sourceRoot\":\"F:\\\\Udemy\\\\Web BootCamp\\\\smartbrainimagedetector-api\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"F:\\\\Udemy\\\\Web BootCamp\\\\smartbrainimagedetector-api\",\"filename\":\"F:\\\\Udemy\\\\Web BootCamp\\\\smartbrainimagedetector-api\\\\server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"F:\\\\Udemy\\\\Web BootCamp\\\\smartbrainimagedetector-api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "F:\\Udemy\\Web BootCamp\\smartbrainimagedetector-api",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "F:\\Udemy\\Web BootCamp\\smartbrainimagedetector-api",
      "filename": "F:\\Udemy\\Web BootCamp\\smartbrainimagedetector-api\\server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "F:\\Udemy\\Web BootCamp\\smartbrainimagedetector-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "F:\\Udemy\\Web BootCamp\\smartbrainimagedetector-api\\server.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "F:\\Udemy\\Web BootCamp\\smartbrainimagedetector-api\\server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "F:\\Udemy\\Web BootCamp\\smartbrainimagedetector-api",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _knex = _interopRequireDefault(require(\"knex\"));\n\nvar _bcryptNodejs = _interopRequireDefault(require(\"bcrypt-nodejs\"));\n\nvar _register = _interopRequireDefault(require(\"./controllers/register\"));\n\nvar _signIn = _interopRequireDefault(require(\"./controllers/signIn\"));\n\nvar _profile = _interopRequireDefault(require(\"./controllers/profile\"));\n\nvar _image = _interopRequireDefault(require(\"./controllers/image\"));\n\nvar _users = _interopRequireDefault(require(\"./controllers/users\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar app = (0, _express[\"default\"])();\nvar portNumber = 3000;\nvar status = {\n  Status: 'Healthy'\n};\nvar db = (0, _knex[\"default\"])({\n  client: 'pg',\n  connection: {\n    host: '127.0.0.1',\n    user: 'postgres',\n    password: 'AMber_8605',\n    database: 'test'\n  }\n});\napp.use((0, _cors[\"default\"])());\napp.use(_bodyParser[\"default\"].json());\napp.get('/', function (req, res) {\n  res.json(status);\n});\napp.get('/getAllUsers', function (req, res) {\n  _users[\"default\"].getAllUsers(res, db);\n});\napp.get('/profile/:id', function (req, res) {\n  _profile[\"default\"].getProfile(req, res, db);\n});\napp.post('/signIn', function (req, res) {\n  _signIn[\"default\"].handleSignIn(req, res, db, _bcryptNodejs[\"default\"]);\n});\napp.post('/register', function (req, res) {\n  _register[\"default\"].handleRegister(req, res, db, _bcryptNodejs[\"default\"]);\n});\napp.post('/imageUrl', function (req, res) {\n  _image[\"default\"].handleAPICall(req, res);\n});\napp.put('/image', function (req, res) {\n  _image[\"default\"].handleImage(req, res, db);\n});\napp.listen(portNumber, function () {\n  console.log(\"app is running \".concat(portNumber));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJhcHAiLCJwb3J0TnVtYmVyIiwic3RhdHVzIiwiU3RhdHVzIiwiZGIiLCJjbGllbnQiLCJjb25uZWN0aW9uIiwiaG9zdCIsInVzZXIiLCJwYXNzd29yZCIsImRhdGFiYXNlIiwidXNlIiwiYm9keVBhcnNlciIsImpzb24iLCJnZXQiLCJyZXEiLCJyZXMiLCJ1c2VycyIsImdldEFsbFVzZXJzIiwicHJvZmlsZSIsImdldFByb2ZpbGUiLCJwb3N0Iiwic2lnbkluIiwiaGFuZGxlU2lnbkluIiwiYmNyeXB0IiwicmVnaXN0ZXIiLCJoYW5kbGVSZWdpc3RlciIsImltYWdlIiwiaGFuZGxlQVBJQ2FsbCIsInB1dCIsImhhbmRsZUltYWdlIiwibGlzdGVuIiwiY29uc29sZSIsImxvZyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUVBLElBQU1BLEdBQUcsR0FBRywwQkFBWjtBQUNBLElBQU1DLFVBQVUsR0FBRyxJQUFuQjtBQUNBLElBQU1DLE1BQU0sR0FBQztBQUNUQyxFQUFBQSxNQUFNLEVBQUU7QUFEQyxDQUFiO0FBS0EsSUFBTUMsRUFBRSxHQUFHLHNCQUFLO0FBQ1pDLEVBQUFBLE1BQU0sRUFBQyxJQURLO0FBRVpDLEVBQUFBLFVBQVUsRUFBRTtBQUNSQyxJQUFBQSxJQUFJLEVBQUMsV0FERztBQUVSQyxJQUFBQSxJQUFJLEVBQUUsVUFGRTtBQUdSQyxJQUFBQSxRQUFRLEVBQUMsWUFIRDtBQUlSQyxJQUFBQSxRQUFRLEVBQUU7QUFKRjtBQUZBLENBQUwsQ0FBWDtBQVdBVixHQUFHLENBQUNXLEdBQUosQ0FBUSx1QkFBUjtBQUNBWCxHQUFHLENBQUNXLEdBQUosQ0FBUUMsdUJBQVdDLElBQVgsRUFBUjtBQUlBYixHQUFHLENBQUNjLEdBQUosQ0FBUSxHQUFSLEVBQWEsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQVk7QUFDckJBLEVBQUFBLEdBQUcsQ0FBQ0gsSUFBSixDQUFTWCxNQUFUO0FBQ0gsQ0FGRDtBQUlBRixHQUFHLENBQUNjLEdBQUosQ0FBUSxjQUFSLEVBQXdCLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFZO0FBQUNDLG9CQUFNQyxXQUFOLENBQWtCRixHQUFsQixFQUF1QlosRUFBdkI7QUFBMkIsQ0FBaEU7QUFFQUosR0FBRyxDQUFDYyxHQUFKLENBQVEsY0FBUixFQUF3QixVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUFDRyxzQkFBUUMsVUFBUixDQUFtQkwsR0FBbkIsRUFBdUJDLEdBQXZCLEVBQTRCWixFQUE1QjtBQUFnQyxDQUF2RTtBQUdBSixHQUFHLENBQUNxQixJQUFKLENBQVMsU0FBVCxFQUFvQixVQUFDTixHQUFELEVBQU1DLEdBQU4sRUFBYztBQUFDTSxxQkFBT0MsWUFBUCxDQUFvQlIsR0FBcEIsRUFBd0JDLEdBQXhCLEVBQTZCWixFQUE3QixFQUFpQ29CLHdCQUFqQztBQUF5QyxDQUE1RTtBQUVBeEIsR0FBRyxDQUFDcUIsSUFBSixDQUFTLFdBQVQsRUFBc0IsVUFBQ04sR0FBRCxFQUFLQyxHQUFMLEVBQWE7QUFBQ1MsdUJBQVNDLGNBQVQsQ0FBd0JYLEdBQXhCLEVBQTRCQyxHQUE1QixFQUFpQ1osRUFBakMsRUFBcUNvQix3QkFBckM7QUFBNkMsQ0FBakY7QUFFQXhCLEdBQUcsQ0FBQ3FCLElBQUosQ0FBUyxXQUFULEVBQXNCLFVBQUNOLEdBQUQsRUFBTUMsR0FBTixFQUFZO0FBQUNXLG9CQUFNQyxhQUFOLENBQW9CYixHQUFwQixFQUF3QkMsR0FBeEI7QUFBNkIsQ0FBaEU7QUFFQWhCLEdBQUcsQ0FBQzZCLEdBQUosQ0FBUSxRQUFSLEVBQWtCLFVBQUNkLEdBQUQsRUFBTUMsR0FBTixFQUFZO0FBQUNXLG9CQUFNRyxXQUFOLENBQWtCZixHQUFsQixFQUFzQkMsR0FBdEIsRUFBMEJaLEVBQTFCO0FBQThCLENBQTdEO0FBRUFKLEdBQUcsQ0FBQytCLE1BQUosQ0FBVzlCLFVBQVgsRUFBdUIsWUFBSztBQUN4QitCLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUiwwQkFBOEJoQyxVQUE5QjtBQUNILENBRkQiLCJzb3VyY2VSb290IjoiRjpcXFVkZW15XFxXZWIgQm9vdENhbXBcXHNtYXJ0YnJhaW5pbWFnZWRldGVjdG9yLWFwaSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xyXG5pbXBvcnQgYm9keVBhcnNlciBmcm9tICdib2R5LXBhcnNlcic7XHJcbmltcG9ydCBjb3JzIGZyb20gJ2NvcnMnO1xyXG5pbXBvcnQga25leCBmcm9tICdrbmV4JztcclxuaW1wb3J0IGJjcnlwdCBmcm9tICdiY3J5cHQtbm9kZWpzJztcclxuaW1wb3J0IHJlZ2lzdGVyIGZyb20gJy4vY29udHJvbGxlcnMvcmVnaXN0ZXInXHJcbmltcG9ydCBzaWduSW4gZnJvbSAnLi9jb250cm9sbGVycy9zaWduSW4nXHJcbmltcG9ydCBwcm9maWxlIGZyb20gJy4vY29udHJvbGxlcnMvcHJvZmlsZSdcclxuaW1wb3J0IGltYWdlIGZyb20gJy4vY29udHJvbGxlcnMvaW1hZ2UnXHJcbmltcG9ydCB1c2VycyBmcm9tICcuL2NvbnRyb2xsZXJzL3VzZXJzJ1xyXG5cclxuY29uc3QgYXBwID0gZXhwcmVzcygpO1xyXG5jb25zdCBwb3J0TnVtYmVyID0gMzAwMDtcclxuY29uc3Qgc3RhdHVzPXtcclxuICAgIFN0YXR1czogJ0hlYWx0aHknXHJcbn1cclxuXHJcblxyXG5jb25zdCBkYiA9IGtuZXgoe1xyXG4gICAgY2xpZW50OidwZycsXHJcbiAgICBjb25uZWN0aW9uOiB7XHJcbiAgICAgICAgaG9zdDonMTI3LjAuMC4xJyxcclxuICAgICAgICB1c2VyOiAncG9zdGdyZXMnLFxyXG4gICAgICAgIHBhc3N3b3JkOidBTWJlcl84NjA1JyxcclxuICAgICAgICBkYXRhYmFzZTogJ3Rlc3QnXHJcbiAgICB9XHJcbn0pXHJcblxyXG5cclxuYXBwLnVzZShjb3JzKCkpXHJcbmFwcC51c2UoYm9keVBhcnNlci5qc29uKCkpO1xyXG5cclxuXHJcblxyXG5hcHAuZ2V0KCcvJywgKHJlcSwgcmVzKT0+e1xyXG4gICAgcmVzLmpzb24oc3RhdHVzKVxyXG59KVxyXG5cclxuYXBwLmdldCgnL2dldEFsbFVzZXJzJywgKHJlcSwgcmVzKT0+e3VzZXJzLmdldEFsbFVzZXJzKHJlcywgZGIpfSlcclxuXHJcbmFwcC5nZXQoJy9wcm9maWxlLzppZCcsIChyZXEsIHJlcykgPT4ge3Byb2ZpbGUuZ2V0UHJvZmlsZShyZXEscmVzLCBkYil9KTtcclxuXHJcblxyXG5hcHAucG9zdCgnL3NpZ25JbicsIChyZXEsIHJlcykgPT4ge3NpZ25Jbi5oYW5kbGVTaWduSW4ocmVxLHJlcywgZGIsIGJjcnlwdCl9KTtcclxuXHJcbmFwcC5wb3N0KCcvcmVnaXN0ZXInLCAocmVxLHJlcykgPT4ge3JlZ2lzdGVyLmhhbmRsZVJlZ2lzdGVyKHJlcSxyZXMsIGRiLCBiY3J5cHQpfSk7XHJcblxyXG5hcHAucG9zdCgnL2ltYWdlVXJsJywgKHJlcSwgcmVzKT0+e2ltYWdlLmhhbmRsZUFQSUNhbGwocmVxLHJlcyl9KVxyXG5cclxuYXBwLnB1dCgnL2ltYWdlJywgKHJlcSwgcmVzKT0+e2ltYWdlLmhhbmRsZUltYWdlKHJlcSxyZXMsZGIpfSlcclxuXHJcbmFwcC5saXN0ZW4ocG9ydE51bWJlciwgKCkgPT57XHJcbiAgICBjb25zb2xlLmxvZyhgYXBwIGlzIHJ1bm5pbmcgJHtwb3J0TnVtYmVyfWApXHJcbn0pO1xyXG5cclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "app",
        "portNumber",
        "status",
        "Status",
        "db",
        "client",
        "connection",
        "host",
        "user",
        "password",
        "database",
        "use",
        "bodyParser",
        "json",
        "get",
        "req",
        "res",
        "users",
        "getAllUsers",
        "profile",
        "getProfile",
        "post",
        "signIn",
        "handleSignIn",
        "bcrypt",
        "register",
        "handleRegister",
        "image",
        "handleAPICall",
        "put",
        "handleImage",
        "listen",
        "console",
        "log"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,GAAG,GAAG,0BAAZ;AACA,IAAMC,UAAU,GAAG,IAAnB;AACA,IAAMC,MAAM,GAAC;AACTC,EAAAA,MAAM,EAAE;AADC,CAAb;AAKA,IAAMC,EAAE,GAAG,sBAAK;AACZC,EAAAA,MAAM,EAAC,IADK;AAEZC,EAAAA,UAAU,EAAE;AACRC,IAAAA,IAAI,EAAC,WADG;AAERC,IAAAA,IAAI,EAAE,UAFE;AAGRC,IAAAA,QAAQ,EAAC,YAHD;AAIRC,IAAAA,QAAQ,EAAE;AAJF;AAFA,CAAL,CAAX;AAWAV,GAAG,CAACW,GAAJ,CAAQ,uBAAR;AACAX,GAAG,CAACW,GAAJ,CAAQC,uBAAWC,IAAX,EAAR;AAIAb,GAAG,CAACc,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAY;AACrBA,EAAAA,GAAG,CAACH,IAAJ,CAASX,MAAT;AACH,CAFD;AAIAF,GAAG,CAACc,GAAJ,CAAQ,cAAR,EAAwB,UAACC,GAAD,EAAMC,GAAN,EAAY;AAACC,oBAAMC,WAAN,CAAkBF,GAAlB,EAAuBZ,EAAvB;AAA2B,CAAhE;AAEAJ,GAAG,CAACc,GAAJ,CAAQ,cAAR,EAAwB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAACG,sBAAQC,UAAR,CAAmBL,GAAnB,EAAuBC,GAAvB,EAA4BZ,EAA5B;AAAgC,CAAvE;AAGAJ,GAAG,CAACqB,IAAJ,CAAS,SAAT,EAAoB,UAACN,GAAD,EAAMC,GAAN,EAAc;AAACM,qBAAOC,YAAP,CAAoBR,GAApB,EAAwBC,GAAxB,EAA6BZ,EAA7B,EAAiCoB,wBAAjC;AAAyC,CAA5E;AAEAxB,GAAG,CAACqB,IAAJ,CAAS,WAAT,EAAsB,UAACN,GAAD,EAAKC,GAAL,EAAa;AAACS,uBAASC,cAAT,CAAwBX,GAAxB,EAA4BC,GAA5B,EAAiCZ,EAAjC,EAAqCoB,wBAArC;AAA6C,CAAjF;AAEAxB,GAAG,CAACqB,IAAJ,CAAS,WAAT,EAAsB,UAACN,GAAD,EAAMC,GAAN,EAAY;AAACW,oBAAMC,aAAN,CAAoBb,GAApB,EAAwBC,GAAxB;AAA6B,CAAhE;AAEAhB,GAAG,CAAC6B,GAAJ,CAAQ,QAAR,EAAkB,UAACd,GAAD,EAAMC,GAAN,EAAY;AAACW,oBAAMG,WAAN,CAAkBf,GAAlB,EAAsBC,GAAtB,EAA0BZ,EAA1B;AAA8B,CAA7D;AAEAJ,GAAG,CAAC+B,MAAJ,CAAW9B,UAAX,EAAuB,YAAK;AACxB+B,EAAAA,OAAO,CAACC,GAAR,0BAA8BhC,UAA9B;AACH,CAFD",
      "sourceRoot": "F:\\Udemy\\Web BootCamp\\smartbrainimagedetector-api",
      "sourcesContent": [
        "import express from 'express';\r\nimport bodyParser from 'body-parser';\r\nimport cors from 'cors';\r\nimport knex from 'knex';\r\nimport bcrypt from 'bcrypt-nodejs';\r\nimport register from './controllers/register'\r\nimport signIn from './controllers/signIn'\r\nimport profile from './controllers/profile'\r\nimport image from './controllers/image'\r\nimport users from './controllers/users'\r\n\r\nconst app = express();\r\nconst portNumber = 3000;\r\nconst status={\r\n    Status: 'Healthy'\r\n}\r\n\r\n\r\nconst db = knex({\r\n    client:'pg',\r\n    connection: {\r\n        host:'127.0.0.1',\r\n        user: 'postgres',\r\n        password:'AMber_8605',\r\n        database: 'test'\r\n    }\r\n})\r\n\r\n\r\napp.use(cors())\r\napp.use(bodyParser.json());\r\n\r\n\r\n\r\napp.get('/', (req, res)=>{\r\n    res.json(status)\r\n})\r\n\r\napp.get('/getAllUsers', (req, res)=>{users.getAllUsers(res, db)})\r\n\r\napp.get('/profile/:id', (req, res) => {profile.getProfile(req,res, db)});\r\n\r\n\r\napp.post('/signIn', (req, res) => {signIn.handleSignIn(req,res, db, bcrypt)});\r\n\r\napp.post('/register', (req,res) => {register.handleRegister(req,res, db, bcrypt)});\r\n\r\napp.post('/imageUrl', (req, res)=>{image.handleAPICall(req,res)})\r\n\r\napp.put('/image', (req, res)=>{image.handleImage(req,res,db)})\r\n\r\napp.listen(portNumber, () =>{\r\n    console.log(`app is running ${portNumber}`)\r\n});\r\n\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1562820639979
  },
  "{\"sourceRoot\":\"F:\\\\Udemy\\\\Web BootCamp\\\\smartbrainimagedetector-api\\\\controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"F:\\\\Udemy\\\\Web BootCamp\\\\smartbrainimagedetector-api\",\"filename\":\"F:\\\\Udemy\\\\Web BootCamp\\\\smartbrainimagedetector-api\\\\controllers\\\\register.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"F:\\\\Udemy\\\\Web BootCamp\\\\smartbrainimagedetector-api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "F:\\Udemy\\Web BootCamp\\smartbrainimagedetector-api\\controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "F:\\Udemy\\Web BootCamp\\smartbrainimagedetector-api",
      "filename": "F:\\Udemy\\Web BootCamp\\smartbrainimagedetector-api\\controllers\\register.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "F:\\Udemy\\Web BootCamp\\smartbrainimagedetector-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "F:\\Udemy\\Web BootCamp\\smartbrainimagedetector-api\\controllers\\register.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "F:\\Udemy\\Web BootCamp\\smartbrainimagedetector-api\\controllers\\register.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "F:\\Udemy\\Web BootCamp\\smartbrainimagedetector-api\\controllers",
        "sourceFileName": "register.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar handleRegister = function handleRegister(req, res, db, bcrypt) {\n  var _req$body = req.body,\n      email = _req$body.email,\n      name = _req$body.name,\n      password = _req$body.password;\n  var hash = bcrypt.hashSync(password);\n  db.transaction(function (trx) {\n    trx.insert({\n      hash: hash,\n      email: email\n    }).into('login').returning('email').then(function (loginEmail) {\n      return trx('users').returning('*').insert({\n        email: loginEmail[0],\n        name: name,\n        joined: new Date()\n      }).then(function (user) {\n        res.json(user[0]);\n      });\n    }).then(trx.commit)[\"catch\"](trx.rollback);\n  })[\"catch\"](function (err) {\n    return res.status(400).json('Unable to register');\n  });\n};\n\nmodule.exports = {\n  handleRegister: handleRegister\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlZ2lzdGVyLmpzIl0sIm5hbWVzIjpbImhhbmRsZVJlZ2lzdGVyIiwicmVxIiwicmVzIiwiZGIiLCJiY3J5cHQiLCJib2R5IiwiZW1haWwiLCJuYW1lIiwicGFzc3dvcmQiLCJoYXNoIiwiaGFzaFN5bmMiLCJ0cmFuc2FjdGlvbiIsInRyeCIsImluc2VydCIsImludG8iLCJyZXR1cm5pbmciLCJ0aGVuIiwibG9naW5FbWFpbCIsImpvaW5lZCIsIkRhdGUiLCJ1c2VyIiwianNvbiIsImNvbW1pdCIsInJvbGxiYWNrIiwiZXJyIiwic3RhdHVzIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFNQSxjQUFjLEdBQUcsU0FBakJBLGNBQWlCLENBQUNDLEdBQUQsRUFBS0MsR0FBTCxFQUFVQyxFQUFWLEVBQWNDLE1BQWQsRUFBeUI7QUFBQSxrQkFFYkgsR0FBRyxDQUFDSSxJQUZTO0FBQUEsTUFFckNDLEtBRnFDLGFBRXJDQSxLQUZxQztBQUFBLE1BRS9CQyxJQUYrQixhQUUvQkEsSUFGK0I7QUFBQSxNQUV6QkMsUUFGeUIsYUFFekJBLFFBRnlCO0FBRzVDLE1BQU1DLElBQUksR0FBR0wsTUFBTSxDQUFDTSxRQUFQLENBQWdCRixRQUFoQixDQUFiO0FBQ0FMLEVBQUFBLEVBQUUsQ0FBQ1EsV0FBSCxDQUFlLFVBQUFDLEdBQUcsRUFBRztBQUNqQkEsSUFBQUEsR0FBRyxDQUFDQyxNQUFKLENBQVc7QUFDUEosTUFBQUEsSUFBSSxFQUFDQSxJQURFO0FBRVBILE1BQUFBLEtBQUssRUFBQ0E7QUFGQyxLQUFYLEVBSUNRLElBSkQsQ0FJTSxPQUpOLEVBS0NDLFNBTEQsQ0FLVyxPQUxYLEVBTUNDLElBTkQsQ0FNTSxVQUFBQyxVQUFVLEVBQUk7QUFDaEIsYUFBT0wsR0FBRyxDQUFDLE9BQUQsQ0FBSCxDQUFhRyxTQUFiLENBQXVCLEdBQXZCLEVBQTRCRixNQUE1QixDQUFtQztBQUN0Q1AsUUFBQUEsS0FBSyxFQUFFVyxVQUFVLENBQUMsQ0FBRCxDQURxQjtBQUV0Q1YsUUFBQUEsSUFBSSxFQUFFQSxJQUZnQztBQUd0Q1csUUFBQUEsTUFBTSxFQUFFLElBQUlDLElBQUo7QUFIOEIsT0FBbkMsRUFJSkgsSUFKSSxDQUlDLFVBQUFJLElBQUksRUFBSTtBQUNabEIsUUFBQUEsR0FBRyxDQUFDbUIsSUFBSixDQUFTRCxJQUFJLENBQUMsQ0FBRCxDQUFiO0FBQ0gsT0FOTSxDQUFQO0FBT0gsS0FkRCxFQWVDSixJQWZELENBZU1KLEdBQUcsQ0FBQ1UsTUFmVixXQWdCT1YsR0FBRyxDQUFDVyxRQWhCWDtBQWlCSCxHQWxCRCxXQWtCUyxVQUFBQyxHQUFHO0FBQUEsV0FBSXRCLEdBQUcsQ0FBQ3VCLE1BQUosQ0FBVyxHQUFYLEVBQWdCSixJQUFoQixDQUFxQixvQkFBckIsQ0FBSjtBQUFBLEdBbEJaO0FBbUJILENBdkJEOztBQXdCQUssTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2IzQixFQUFBQSxjQUFjLEVBQUVBO0FBREgsQ0FBakIiLCJzb3VyY2VSb290IjoiRjpcXFVkZW15XFxXZWIgQm9vdENhbXBcXHNtYXJ0YnJhaW5pbWFnZWRldGVjdG9yLWFwaVxcY29udHJvbGxlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBoYW5kbGVSZWdpc3RlciA9IChyZXEscmVzLCBkYiwgYmNyeXB0KSA9PiB7XHJcblxyXG4gICAgY29uc3Qge2VtYWlsLG5hbWUsIHBhc3N3b3JkfSA9IHJlcS5ib2R5O1xyXG4gICAgY29uc3QgaGFzaCA9IGJjcnlwdC5oYXNoU3luYyhwYXNzd29yZCk7XHJcbiAgICBkYi50cmFuc2FjdGlvbih0cnggPT57XHJcbiAgICAgICAgdHJ4Lmluc2VydCh7XHJcbiAgICAgICAgICAgIGhhc2g6aGFzaCxcclxuICAgICAgICAgICAgZW1haWw6ZW1haWxcclxuICAgICAgICB9KVxyXG4gICAgICAgIC5pbnRvKCdsb2dpbicpXHJcbiAgICAgICAgLnJldHVybmluZygnZW1haWwnKVxyXG4gICAgICAgIC50aGVuKGxvZ2luRW1haWwgPT4ge1xyXG4gICAgICAgICAgICByZXR1cm4gdHJ4KCd1c2VycycpLnJldHVybmluZygnKicpLmluc2VydCh7XHJcbiAgICAgICAgICAgICAgICBlbWFpbDogbG9naW5FbWFpbFswXSxcclxuICAgICAgICAgICAgICAgIG5hbWU6IG5hbWUsXHJcbiAgICAgICAgICAgICAgICBqb2luZWQ6IG5ldyBEYXRlKClcclxuICAgICAgICAgICAgfSkudGhlbih1c2VyID0+IHtcclxuICAgICAgICAgICAgICAgIHJlcy5qc29uKHVzZXJbMF0pXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgfSlcclxuICAgICAgICAudGhlbih0cnguY29tbWl0KVxyXG4gICAgICAgIC5jYXRjaCh0cngucm9sbGJhY2spXHJcbiAgICB9KS5jYXRjaChlcnIgPT4gcmVzLnN0YXR1cyg0MDApLmpzb24oJ1VuYWJsZSB0byByZWdpc3RlcicpKVxyXG59XHJcbm1vZHVsZS5leHBvcnRzID0ge1xyXG4gICAgaGFuZGxlUmVnaXN0ZXI6IGhhbmRsZVJlZ2lzdGVyXHJcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "register.js"
      ],
      "names": [
        "handleRegister",
        "req",
        "res",
        "db",
        "bcrypt",
        "body",
        "email",
        "name",
        "password",
        "hash",
        "hashSync",
        "transaction",
        "trx",
        "insert",
        "into",
        "returning",
        "then",
        "loginEmail",
        "joined",
        "Date",
        "user",
        "json",
        "commit",
        "rollback",
        "err",
        "status",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,cAAc,GAAG,SAAjBA,cAAiB,CAACC,GAAD,EAAKC,GAAL,EAAUC,EAAV,EAAcC,MAAd,EAAyB;AAAA,kBAEbH,GAAG,CAACI,IAFS;AAAA,MAErCC,KAFqC,aAErCA,KAFqC;AAAA,MAE/BC,IAF+B,aAE/BA,IAF+B;AAAA,MAEzBC,QAFyB,aAEzBA,QAFyB;AAG5C,MAAMC,IAAI,GAAGL,MAAM,CAACM,QAAP,CAAgBF,QAAhB,CAAb;AACAL,EAAAA,EAAE,CAACQ,WAAH,CAAe,UAAAC,GAAG,EAAG;AACjBA,IAAAA,GAAG,CAACC,MAAJ,CAAW;AACPJ,MAAAA,IAAI,EAACA,IADE;AAEPH,MAAAA,KAAK,EAACA;AAFC,KAAX,EAICQ,IAJD,CAIM,OAJN,EAKCC,SALD,CAKW,OALX,EAMCC,IAND,CAMM,UAAAC,UAAU,EAAI;AAChB,aAAOL,GAAG,CAAC,OAAD,CAAH,CAAaG,SAAb,CAAuB,GAAvB,EAA4BF,MAA5B,CAAmC;AACtCP,QAAAA,KAAK,EAAEW,UAAU,CAAC,CAAD,CADqB;AAEtCV,QAAAA,IAAI,EAAEA,IAFgC;AAGtCW,QAAAA,MAAM,EAAE,IAAIC,IAAJ;AAH8B,OAAnC,EAIJH,IAJI,CAIC,UAAAI,IAAI,EAAI;AACZlB,QAAAA,GAAG,CAACmB,IAAJ,CAASD,IAAI,CAAC,CAAD,CAAb;AACH,OANM,CAAP;AAOH,KAdD,EAeCJ,IAfD,CAeMJ,GAAG,CAACU,MAfV,WAgBOV,GAAG,CAACW,QAhBX;AAiBH,GAlBD,WAkBS,UAAAC,GAAG;AAAA,WAAItB,GAAG,CAACuB,MAAJ,CAAW,GAAX,EAAgBJ,IAAhB,CAAqB,oBAArB,CAAJ;AAAA,GAlBZ;AAmBH,CAvBD;;AAwBAK,MAAM,CAACC,OAAP,GAAiB;AACb3B,EAAAA,cAAc,EAAEA;AADH,CAAjB",
      "sourceRoot": "F:\\Udemy\\Web BootCamp\\smartbrainimagedetector-api\\controllers",
      "sourcesContent": [
        "const handleRegister = (req,res, db, bcrypt) => {\r\n\r\n    const {email,name, password} = req.body;\r\n    const hash = bcrypt.hashSync(password);\r\n    db.transaction(trx =>{\r\n        trx.insert({\r\n            hash:hash,\r\n            email:email\r\n        })\r\n        .into('login')\r\n        .returning('email')\r\n        .then(loginEmail => {\r\n            return trx('users').returning('*').insert({\r\n                email: loginEmail[0],\r\n                name: name,\r\n                joined: new Date()\r\n            }).then(user => {\r\n                res.json(user[0])\r\n            })\r\n        })\r\n        .then(trx.commit)\r\n        .catch(trx.rollback)\r\n    }).catch(err => res.status(400).json('Unable to register'))\r\n}\r\nmodule.exports = {\r\n    handleRegister: handleRegister\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1562817283041
  },
  "{\"sourceRoot\":\"F:\\\\Udemy\\\\Web BootCamp\\\\smartbrainimagedetector-api\\\\controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"F:\\\\Udemy\\\\Web BootCamp\\\\smartbrainimagedetector-api\",\"filename\":\"F:\\\\Udemy\\\\Web BootCamp\\\\smartbrainimagedetector-api\\\\controllers\\\\signIn.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"F:\\\\Udemy\\\\Web BootCamp\\\\smartbrainimagedetector-api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "F:\\Udemy\\Web BootCamp\\smartbrainimagedetector-api\\controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "F:\\Udemy\\Web BootCamp\\smartbrainimagedetector-api",
      "filename": "F:\\Udemy\\Web BootCamp\\smartbrainimagedetector-api\\controllers\\signIn.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "F:\\Udemy\\Web BootCamp\\smartbrainimagedetector-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "F:\\Udemy\\Web BootCamp\\smartbrainimagedetector-api\\controllers\\signIn.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "F:\\Udemy\\Web BootCamp\\smartbrainimagedetector-api\\controllers\\signIn.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "F:\\Udemy\\Web BootCamp\\smartbrainimagedetector-api\\controllers",
        "sourceFileName": "signIn.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar handleSignIn = function handleSignIn(req, res, db, bcrypt) {\n  var _req$body = req.body,\n      email = _req$body.email,\n      password = _req$body.password;\n  db.select('email', 'hash').from('login').where('email', '=', email).then(function (data) {\n    var isVaild = bcrypt.compareSync(password, data[0].hash);\n\n    if (isVaild) {\n      return db.select('*').from('users').where('email', '=', email).then(function (user) {\n        res.json(user[0]);\n      })[\"catch\"](function (err) {\n        return res.status(404).json('unable to get user');\n      });\n    } else {\n      res.status(401).json('Not Authorized');\n    }\n  });\n};\n\nmodule.exports = {\n  handleSignIn: handleSignIn\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNpZ25Jbi5qcyJdLCJuYW1lcyI6WyJoYW5kbGVTaWduSW4iLCJyZXEiLCJyZXMiLCJkYiIsImJjcnlwdCIsImJvZHkiLCJlbWFpbCIsInBhc3N3b3JkIiwic2VsZWN0IiwiZnJvbSIsIndoZXJlIiwidGhlbiIsImRhdGEiLCJpc1ZhaWxkIiwiY29tcGFyZVN5bmMiLCJoYXNoIiwidXNlciIsImpzb24iLCJlcnIiLCJzdGF0dXMiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQU1BLFlBQVksR0FBRyxTQUFmQSxZQUFlLENBQUNDLEdBQUQsRUFBS0MsR0FBTCxFQUFVQyxFQUFWLEVBQWNDLE1BQWQsRUFBdUI7QUFBQSxrQkFFZEgsR0FBRyxDQUFDSSxJQUZVO0FBQUEsTUFFakNDLEtBRmlDLGFBRWpDQSxLQUZpQztBQUFBLE1BRTFCQyxRQUYwQixhQUUxQkEsUUFGMEI7QUFHekNKLEVBQUFBLEVBQUUsQ0FBQ0ssTUFBSCxDQUFVLE9BQVYsRUFBbUIsTUFBbkIsRUFBMkJDLElBQTNCLENBQWdDLE9BQWhDLEVBQ0NDLEtBREQsQ0FDTyxPQURQLEVBQ2dCLEdBRGhCLEVBQ3FCSixLQURyQixFQUVDSyxJQUZELENBRU0sVUFBQUMsSUFBSSxFQUFJO0FBQ2IsUUFBTUMsT0FBTyxHQUFHVCxNQUFNLENBQUNVLFdBQVAsQ0FBbUJQLFFBQW5CLEVBQTZCSyxJQUFJLENBQUMsQ0FBRCxDQUFKLENBQVFHLElBQXJDLENBQWhCOztBQUNBLFFBQUdGLE9BQUgsRUFBVztBQUNYLGFBQU9WLEVBQUUsQ0FBQ0ssTUFBSCxDQUFVLEdBQVYsRUFBZUMsSUFBZixDQUFvQixPQUFwQixFQUNGQyxLQURFLENBQ0ksT0FESixFQUNhLEdBRGIsRUFDa0JKLEtBRGxCLEVBRUZLLElBRkUsQ0FFRyxVQUFBSyxJQUFJLEVBQUk7QUFDVmQsUUFBQUEsR0FBRyxDQUFDZSxJQUFKLENBQVNELElBQUksQ0FBQyxDQUFELENBQWI7QUFDSCxPQUpFLFdBS0ksVUFBQUUsR0FBRztBQUFBLGVBQUloQixHQUFHLENBQUNpQixNQUFKLENBQVcsR0FBWCxFQUFnQkYsSUFBaEIsQ0FBcUIsb0JBQXJCLENBQUo7QUFBQSxPQUxQLENBQVA7QUFNQyxLQVBELE1BT0s7QUFDRGYsTUFBQUEsR0FBRyxDQUFDaUIsTUFBSixDQUFXLEdBQVgsRUFBZ0JGLElBQWhCLENBQXFCLGdCQUFyQjtBQUNIO0FBQ0QsR0FkRDtBQWVGLENBbEJEOztBQW9CQUcsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2JyQixFQUFBQSxZQUFZLEVBQUVBO0FBREQsQ0FBakIiLCJzb3VyY2VSb290IjoiRjpcXFVkZW15XFxXZWIgQm9vdENhbXBcXHNtYXJ0YnJhaW5pbWFnZWRldGVjdG9yLWFwaVxcY29udHJvbGxlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBoYW5kbGVTaWduSW4gPSAocmVxLHJlcywgZGIsIGJjcnlwdCk9PntcclxuIFxyXG4gICAgY29uc3Qge2VtYWlsLCBwYXNzd29yZH0gPSByZXEuYm9keTtcclxuICAgZGIuc2VsZWN0KCdlbWFpbCcsICdoYXNoJykuZnJvbSgnbG9naW4nKVxyXG4gICAud2hlcmUoJ2VtYWlsJywgJz0nLCBlbWFpbClcclxuICAgLnRoZW4oZGF0YSA9PiB7XHJcbiAgICBjb25zdCBpc1ZhaWxkID0gYmNyeXB0LmNvbXBhcmVTeW5jKHBhc3N3b3JkLCBkYXRhWzBdLmhhc2gpXHJcbiAgICBpZihpc1ZhaWxkKXtcclxuICAgIHJldHVybiBkYi5zZWxlY3QoJyonKS5mcm9tKCd1c2VycycpXHJcbiAgICAgICAgLndoZXJlKCdlbWFpbCcsICc9JywgZW1haWwpXHJcbiAgICAgICAgLnRoZW4odXNlciA9PiB7XHJcbiAgICAgICAgICAgIHJlcy5qc29uKHVzZXJbMF0pXHJcbiAgICAgICAgfSlcclxuICAgICAgICAuY2F0Y2goZXJyID0+IHJlcy5zdGF0dXMoNDA0KS5qc29uKCd1bmFibGUgdG8gZ2V0IHVzZXInKSlcclxuICAgIH1lbHNle1xyXG4gICAgICAgIHJlcy5zdGF0dXMoNDAxKS5qc29uKCdOb3QgQXV0aG9yaXplZCcpXHJcbiAgICB9XHJcbiAgIH0pXHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0ge1xyXG4gICAgaGFuZGxlU2lnbkluOiBoYW5kbGVTaWduSW5cclxufSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "signIn.js"
      ],
      "names": [
        "handleSignIn",
        "req",
        "res",
        "db",
        "bcrypt",
        "body",
        "email",
        "password",
        "select",
        "from",
        "where",
        "then",
        "data",
        "isVaild",
        "compareSync",
        "hash",
        "user",
        "json",
        "err",
        "status",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,YAAY,GAAG,SAAfA,YAAe,CAACC,GAAD,EAAKC,GAAL,EAAUC,EAAV,EAAcC,MAAd,EAAuB;AAAA,kBAEdH,GAAG,CAACI,IAFU;AAAA,MAEjCC,KAFiC,aAEjCA,KAFiC;AAAA,MAE1BC,QAF0B,aAE1BA,QAF0B;AAGzCJ,EAAAA,EAAE,CAACK,MAAH,CAAU,OAAV,EAAmB,MAAnB,EAA2BC,IAA3B,CAAgC,OAAhC,EACCC,KADD,CACO,OADP,EACgB,GADhB,EACqBJ,KADrB,EAECK,IAFD,CAEM,UAAAC,IAAI,EAAI;AACb,QAAMC,OAAO,GAAGT,MAAM,CAACU,WAAP,CAAmBP,QAAnB,EAA6BK,IAAI,CAAC,CAAD,CAAJ,CAAQG,IAArC,CAAhB;;AACA,QAAGF,OAAH,EAAW;AACX,aAAOV,EAAE,CAACK,MAAH,CAAU,GAAV,EAAeC,IAAf,CAAoB,OAApB,EACFC,KADE,CACI,OADJ,EACa,GADb,EACkBJ,KADlB,EAEFK,IAFE,CAEG,UAAAK,IAAI,EAAI;AACVd,QAAAA,GAAG,CAACe,IAAJ,CAASD,IAAI,CAAC,CAAD,CAAb;AACH,OAJE,WAKI,UAAAE,GAAG;AAAA,eAAIhB,GAAG,CAACiB,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqB,oBAArB,CAAJ;AAAA,OALP,CAAP;AAMC,KAPD,MAOK;AACDf,MAAAA,GAAG,CAACiB,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqB,gBAArB;AACH;AACD,GAdD;AAeF,CAlBD;;AAoBAG,MAAM,CAACC,OAAP,GAAiB;AACbrB,EAAAA,YAAY,EAAEA;AADD,CAAjB",
      "sourceRoot": "F:\\Udemy\\Web BootCamp\\smartbrainimagedetector-api\\controllers",
      "sourcesContent": [
        "const handleSignIn = (req,res, db, bcrypt)=>{\r\n \r\n    const {email, password} = req.body;\r\n   db.select('email', 'hash').from('login')\r\n   .where('email', '=', email)\r\n   .then(data => {\r\n    const isVaild = bcrypt.compareSync(password, data[0].hash)\r\n    if(isVaild){\r\n    return db.select('*').from('users')\r\n        .where('email', '=', email)\r\n        .then(user => {\r\n            res.json(user[0])\r\n        })\r\n        .catch(err => res.status(404).json('unable to get user'))\r\n    }else{\r\n        res.status(401).json('Not Authorized')\r\n    }\r\n   })\r\n}\r\n\r\nmodule.exports = {\r\n    handleSignIn: handleSignIn\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1562818559055
  },
  "{\"sourceRoot\":\"F:\\\\Udemy\\\\Web BootCamp\\\\smartbrainimagedetector-api\\\\controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"F:\\\\Udemy\\\\Web BootCamp\\\\smartbrainimagedetector-api\",\"filename\":\"F:\\\\Udemy\\\\Web BootCamp\\\\smartbrainimagedetector-api\\\\controllers\\\\profile.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"F:\\\\Udemy\\\\Web BootCamp\\\\smartbrainimagedetector-api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "F:\\Udemy\\Web BootCamp\\smartbrainimagedetector-api\\controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "F:\\Udemy\\Web BootCamp\\smartbrainimagedetector-api",
      "filename": "F:\\Udemy\\Web BootCamp\\smartbrainimagedetector-api\\controllers\\profile.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "F:\\Udemy\\Web BootCamp\\smartbrainimagedetector-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "F:\\Udemy\\Web BootCamp\\smartbrainimagedetector-api\\controllers\\profile.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "F:\\Udemy\\Web BootCamp\\smartbrainimagedetector-api\\controllers\\profile.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "F:\\Udemy\\Web BootCamp\\smartbrainimagedetector-api\\controllers",
        "sourceFileName": "profile.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar getProfile = function getProfile(req, res, db) {\n  var id = req.params.id;\n  db.select('*').from('users').where({\n    id: id\n  }).then(function (user) {\n    if (user.length) {\n      res.json(user[0]);\n    } else {\n      res.status(404).json('Not Found');\n    }\n  })[\"catch\"](function (err) {\n    return res.status(400).json('error getting user');\n  });\n};\n\nmodule.exports = {\n  getProfile: getProfile\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2ZpbGUuanMiXSwibmFtZXMiOlsiZ2V0UHJvZmlsZSIsInJlcSIsInJlcyIsImRiIiwiaWQiLCJwYXJhbXMiLCJzZWxlY3QiLCJmcm9tIiwid2hlcmUiLCJ0aGVuIiwidXNlciIsImxlbmd0aCIsImpzb24iLCJzdGF0dXMiLCJlcnIiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQU1BLFVBQVUsR0FBRyxTQUFiQSxVQUFhLENBQUNDLEdBQUQsRUFBS0MsR0FBTCxFQUFVQyxFQUFWLEVBQWU7QUFBQSxNQUN2QkMsRUFEdUIsR0FDakJILEdBQUcsQ0FBQ0ksTUFEYSxDQUN2QkQsRUFEdUI7QUFFOUJELEVBQUFBLEVBQUUsQ0FBQ0csTUFBSCxDQUFVLEdBQVYsRUFBZUMsSUFBZixDQUFvQixPQUFwQixFQUE2QkMsS0FBN0IsQ0FBbUM7QUFBQ0osSUFBQUEsRUFBRSxFQUFGQTtBQUFELEdBQW5DLEVBQ0NLLElBREQsQ0FDTSxVQUFBQyxJQUFJLEVBQUk7QUFDVixRQUFHQSxJQUFJLENBQUNDLE1BQVIsRUFBZTtBQUNYVCxNQUFBQSxHQUFHLENBQUNVLElBQUosQ0FBU0YsSUFBSSxDQUFDLENBQUQsQ0FBYjtBQUNILEtBRkQsTUFFSztBQUNEUixNQUFBQSxHQUFHLENBQUNXLE1BQUosQ0FBVyxHQUFYLEVBQWdCRCxJQUFoQixDQUFxQixXQUFyQjtBQUNIO0FBRUosR0FSRCxXQVFTLFVBQUFFLEdBQUc7QUFBQSxXQUFHWixHQUFHLENBQUNXLE1BQUosQ0FBVyxHQUFYLEVBQWdCRCxJQUFoQixDQUFxQixvQkFBckIsQ0FBSDtBQUFBLEdBUlo7QUFTSCxDQVhEOztBQWFBRyxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDYmhCLEVBQUFBLFVBQVUsRUFBQ0E7QUFERSxDQUFqQiIsInNvdXJjZVJvb3QiOiJGOlxcVWRlbXlcXFdlYiBCb290Q2FtcFxcc21hcnRicmFpbmltYWdlZGV0ZWN0b3ItYXBpXFxjb250cm9sbGVycyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGdldFByb2ZpbGUgPSAocmVxLHJlcywgZGIpPT57XHJcbiAgICBjb25zdCB7aWR9ID0gcmVxLnBhcmFtcztcclxuICAgIGRiLnNlbGVjdCgnKicpLmZyb20oJ3VzZXJzJykud2hlcmUoe2lkfSlcclxuICAgIC50aGVuKHVzZXIgPT4ge1xyXG4gICAgICAgIGlmKHVzZXIubGVuZ3RoKXtcclxuICAgICAgICAgICAgcmVzLmpzb24odXNlclswXSlcclxuICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgcmVzLnN0YXR1cyg0MDQpLmpzb24oJ05vdCBGb3VuZCcpXHJcbiAgICAgICAgfVxyXG4gICBcclxuICAgIH0pLmNhdGNoKGVycj0+IHJlcy5zdGF0dXMoNDAwKS5qc29uKCdlcnJvciBnZXR0aW5nIHVzZXInKSk7XHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0ge1xyXG4gICAgZ2V0UHJvZmlsZTpnZXRQcm9maWxlXHJcbn1cclxuXHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "profile.js"
      ],
      "names": [
        "getProfile",
        "req",
        "res",
        "db",
        "id",
        "params",
        "select",
        "from",
        "where",
        "then",
        "user",
        "length",
        "json",
        "status",
        "err",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,UAAU,GAAG,SAAbA,UAAa,CAACC,GAAD,EAAKC,GAAL,EAAUC,EAAV,EAAe;AAAA,MACvBC,EADuB,GACjBH,GAAG,CAACI,MADa,CACvBD,EADuB;AAE9BD,EAAAA,EAAE,CAACG,MAAH,CAAU,GAAV,EAAeC,IAAf,CAAoB,OAApB,EAA6BC,KAA7B,CAAmC;AAACJ,IAAAA,EAAE,EAAFA;AAAD,GAAnC,EACCK,IADD,CACM,UAAAC,IAAI,EAAI;AACV,QAAGA,IAAI,CAACC,MAAR,EAAe;AACXT,MAAAA,GAAG,CAACU,IAAJ,CAASF,IAAI,CAAC,CAAD,CAAb;AACH,KAFD,MAEK;AACDR,MAAAA,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqB,WAArB;AACH;AAEJ,GARD,WAQS,UAAAE,GAAG;AAAA,WAAGZ,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqB,oBAArB,CAAH;AAAA,GARZ;AASH,CAXD;;AAaAG,MAAM,CAACC,OAAP,GAAiB;AACbhB,EAAAA,UAAU,EAACA;AADE,CAAjB",
      "sourceRoot": "F:\\Udemy\\Web BootCamp\\smartbrainimagedetector-api\\controllers",
      "sourcesContent": [
        "const getProfile = (req,res, db)=>{\r\n    const {id} = req.params;\r\n    db.select('*').from('users').where({id})\r\n    .then(user => {\r\n        if(user.length){\r\n            res.json(user[0])\r\n        }else{\r\n            res.status(404).json('Not Found')\r\n        }\r\n   \r\n    }).catch(err=> res.status(400).json('error getting user'));\r\n}\r\n\r\nmodule.exports = {\r\n    getProfile:getProfile\r\n}\r\n\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1562818746943
  },
  "{\"sourceRoot\":\"F:\\\\Udemy\\\\Web BootCamp\\\\smartbrainimagedetector-api\\\\controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"F:\\\\Udemy\\\\Web BootCamp\\\\smartbrainimagedetector-api\",\"filename\":\"F:\\\\Udemy\\\\Web BootCamp\\\\smartbrainimagedetector-api\\\\controllers\\\\image.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"F:\\\\Udemy\\\\Web BootCamp\\\\smartbrainimagedetector-api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "F:\\Udemy\\Web BootCamp\\smartbrainimagedetector-api\\controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "F:\\Udemy\\Web BootCamp\\smartbrainimagedetector-api",
      "filename": "F:\\Udemy\\Web BootCamp\\smartbrainimagedetector-api\\controllers\\image.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "F:\\Udemy\\Web BootCamp\\smartbrainimagedetector-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "F:\\Udemy\\Web BootCamp\\smartbrainimagedetector-api\\controllers\\image.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "F:\\Udemy\\Web BootCamp\\smartbrainimagedetector-api\\controllers\\image.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "F:\\Udemy\\Web BootCamp\\smartbrainimagedetector-api\\controllers",
        "sourceFileName": "image.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _clarifai = _interopRequireDefault(require(\"clarifai\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar app = new _clarifai[\"default\"].App({\n  apiKey: 'c6039b5029814893a7527e77a5c9ed80'\n});\n\nvar handleAPICall = function handleAPICall(req, res) {\n  app.models.predict(_clarifai[\"default\"].FACE_DETECT_MODEL, req.body.input).then(function (data) {\n    res.json(data);\n  })[\"catch\"](function (err) {\n    return res.status(400).json('unable to work with API');\n  });\n};\n\nvar handleImage = function handleImage(req, res, db) {\n  var id = req.body.id;\n  db('users').where('id', '=', id).increment('entries', 1).returning('entries').then(function (entries) {\n    res.json([entries[0]]);\n  })[\"catch\"](function (err) {\n    return res.status(400).json(\"unable to get entries\");\n  });\n};\n\nmodule.exports = {\n  handleImage: handleImage,\n  handleAPICall: handleAPICall\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImltYWdlLmpzIl0sIm5hbWVzIjpbImFwcCIsIkNsYXJpZmFpIiwiQXBwIiwiYXBpS2V5IiwiaGFuZGxlQVBJQ2FsbCIsInJlcSIsInJlcyIsIm1vZGVscyIsInByZWRpY3QiLCJGQUNFX0RFVEVDVF9NT0RFTCIsImJvZHkiLCJpbnB1dCIsInRoZW4iLCJkYXRhIiwianNvbiIsImVyciIsInN0YXR1cyIsImhhbmRsZUltYWdlIiwiZGIiLCJpZCIsIndoZXJlIiwiaW5jcmVtZW50IiwicmV0dXJuaW5nIiwiZW50cmllcyIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7QUFFQSxJQUFNQSxHQUFHLEdBQUcsSUFBSUMscUJBQVNDLEdBQWIsQ0FBaUI7QUFDekJDLEVBQUFBLE1BQU0sRUFBRTtBQURpQixDQUFqQixDQUFaOztBQUlBLElBQU1DLGFBQWEsR0FBRyxTQUFoQkEsYUFBZ0IsQ0FBQ0MsR0FBRCxFQUFLQyxHQUFMLEVBQVc7QUFDN0JOLEVBQUFBLEdBQUcsQ0FBQ08sTUFBSixDQUNIQyxPQURHLENBQ0tQLHFCQUFTUSxpQkFEZCxFQUNpQ0osR0FBRyxDQUFDSyxJQUFKLENBQVNDLEtBRDFDLEVBRUhDLElBRkcsQ0FFRSxVQUFBQyxJQUFJLEVBQUk7QUFDVlAsSUFBQUEsR0FBRyxDQUFDUSxJQUFKLENBQVNELElBQVQ7QUFFSCxHQUxHLFdBTUcsVUFBQUUsR0FBRztBQUFBLFdBQUlULEdBQUcsQ0FBQ1UsTUFBSixDQUFXLEdBQVgsRUFBZ0JGLElBQWhCLENBQXFCLHlCQUFyQixDQUFKO0FBQUEsR0FOTjtBQVFILENBVEQ7O0FBWUEsSUFBTUcsV0FBVyxHQUFHLFNBQWRBLFdBQWMsQ0FBQ1osR0FBRCxFQUFLQyxHQUFMLEVBQVVZLEVBQVYsRUFBZTtBQUFBLE1BRXhCQyxFQUZ3QixHQUVsQmQsR0FBRyxDQUFDSyxJQUZjLENBRXhCUyxFQUZ3QjtBQUcvQkQsRUFBQUEsRUFBRSxDQUFDLE9BQUQsQ0FBRixDQUFZRSxLQUFaLENBQWtCLElBQWxCLEVBQXdCLEdBQXhCLEVBQTZCRCxFQUE3QixFQUNDRSxTQURELENBQ1csU0FEWCxFQUNzQixDQUR0QixFQUVDQyxTQUZELENBRVcsU0FGWCxFQUdDVixJQUhELENBR00sVUFBQVcsT0FBTyxFQUFJO0FBQ2JqQixJQUFBQSxHQUFHLENBQUNRLElBQUosQ0FBUyxDQUFDUyxPQUFPLENBQUMsQ0FBRCxDQUFSLENBQVQ7QUFDSCxHQUxELFdBTU8sVUFBQVIsR0FBRztBQUFBLFdBQUlULEdBQUcsQ0FBQ1UsTUFBSixDQUFXLEdBQVgsRUFBZ0JGLElBQWhCLENBQXFCLHVCQUFyQixDQUFKO0FBQUEsR0FOVjtBQU9ILENBVkQ7O0FBWUFVLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNiUixFQUFBQSxXQUFXLEVBQUVBLFdBREE7QUFFYmIsRUFBQUEsYUFBYSxFQUFDQTtBQUZELENBQWpCIiwic291cmNlUm9vdCI6IkY6XFxVZGVteVxcV2ViIEJvb3RDYW1wXFxzbWFydGJyYWluaW1hZ2VkZXRlY3Rvci1hcGlcXGNvbnRyb2xsZXJzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IENsYXJpZmFpIGZyb20gJ2NsYXJpZmFpJztcclxuXHJcbmNvbnN0IGFwcCA9IG5ldyBDbGFyaWZhaS5BcHAoe1xyXG4gICAgYXBpS2V5OiAnYzYwMzliNTAyOTgxNDg5M2E3NTI3ZTc3YTVjOWVkODAnXHJcbn0pO1xyXG5cclxuY29uc3QgaGFuZGxlQVBJQ2FsbCA9IChyZXEscmVzKT0+e1xyXG4gICAgYXBwLm1vZGVsc1xyXG4ucHJlZGljdChDbGFyaWZhaS5GQUNFX0RFVEVDVF9NT0RFTCwgcmVxLmJvZHkuaW5wdXQpXHJcbi50aGVuKGRhdGEgPT4ge1xyXG4gICAgcmVzLmpzb24oZGF0YSlcclxuICAgIFxyXG59KVxyXG4uY2F0Y2goZXJyID0+IHJlcy5zdGF0dXMoNDAwKS5qc29uKCd1bmFibGUgdG8gd29yayB3aXRoIEFQSScpKTtcclxuXHJcbn1cclxuXHJcblxyXG5jb25zdCBoYW5kbGVJbWFnZSA9IChyZXEscmVzLCBkYik9PntcclxuXHJcbiAgICBjb25zdCB7aWR9ID0gcmVxLmJvZHk7XHJcbiAgICBkYigndXNlcnMnKS53aGVyZSgnaWQnLCAnPScsIGlkKVxyXG4gICAgLmluY3JlbWVudCgnZW50cmllcycsIDEpXHJcbiAgICAucmV0dXJuaW5nKCdlbnRyaWVzJylcclxuICAgIC50aGVuKGVudHJpZXMgPT4ge1xyXG4gICAgICAgIHJlcy5qc29uKFtlbnRyaWVzWzBdXSlcclxuICAgIH0pXHJcbiAgICAuY2F0Y2goZXJyID0+IHJlcy5zdGF0dXMoNDAwKS5qc29uKFwidW5hYmxlIHRvIGdldCBlbnRyaWVzXCIpKVxyXG59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHtcclxuICAgIGhhbmRsZUltYWdlOiBoYW5kbGVJbWFnZSxcclxuICAgIGhhbmRsZUFQSUNhbGw6aGFuZGxlQVBJQ2FsbFxyXG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "image.js"
      ],
      "names": [
        "app",
        "Clarifai",
        "App",
        "apiKey",
        "handleAPICall",
        "req",
        "res",
        "models",
        "predict",
        "FACE_DETECT_MODEL",
        "body",
        "input",
        "then",
        "data",
        "json",
        "err",
        "status",
        "handleImage",
        "db",
        "id",
        "where",
        "increment",
        "returning",
        "entries",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;;;AAEA,IAAMA,GAAG,GAAG,IAAIC,qBAASC,GAAb,CAAiB;AACzBC,EAAAA,MAAM,EAAE;AADiB,CAAjB,CAAZ;;AAIA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,GAAD,EAAKC,GAAL,EAAW;AAC7BN,EAAAA,GAAG,CAACO,MAAJ,CACHC,OADG,CACKP,qBAASQ,iBADd,EACiCJ,GAAG,CAACK,IAAJ,CAASC,KAD1C,EAEHC,IAFG,CAEE,UAAAC,IAAI,EAAI;AACVP,IAAAA,GAAG,CAACQ,IAAJ,CAASD,IAAT;AAEH,GALG,WAMG,UAAAE,GAAG;AAAA,WAAIT,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqB,yBAArB,CAAJ;AAAA,GANN;AAQH,CATD;;AAYA,IAAMG,WAAW,GAAG,SAAdA,WAAc,CAACZ,GAAD,EAAKC,GAAL,EAAUY,EAAV,EAAe;AAAA,MAExBC,EAFwB,GAElBd,GAAG,CAACK,IAFc,CAExBS,EAFwB;AAG/BD,EAAAA,EAAE,CAAC,OAAD,CAAF,CAAYE,KAAZ,CAAkB,IAAlB,EAAwB,GAAxB,EAA6BD,EAA7B,EACCE,SADD,CACW,SADX,EACsB,CADtB,EAECC,SAFD,CAEW,SAFX,EAGCV,IAHD,CAGM,UAAAW,OAAO,EAAI;AACbjB,IAAAA,GAAG,CAACQ,IAAJ,CAAS,CAACS,OAAO,CAAC,CAAD,CAAR,CAAT;AACH,GALD,WAMO,UAAAR,GAAG;AAAA,WAAIT,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqB,uBAArB,CAAJ;AAAA,GANV;AAOH,CAVD;;AAYAU,MAAM,CAACC,OAAP,GAAiB;AACbR,EAAAA,WAAW,EAAEA,WADA;AAEbb,EAAAA,aAAa,EAACA;AAFD,CAAjB",
      "sourceRoot": "F:\\Udemy\\Web BootCamp\\smartbrainimagedetector-api\\controllers",
      "sourcesContent": [
        "import Clarifai from 'clarifai';\r\n\r\nconst app = new Clarifai.App({\r\n    apiKey: 'c6039b5029814893a7527e77a5c9ed80'\r\n});\r\n\r\nconst handleAPICall = (req,res)=>{\r\n    app.models\r\n.predict(Clarifai.FACE_DETECT_MODEL, req.body.input)\r\n.then(data => {\r\n    res.json(data)\r\n    \r\n})\r\n.catch(err => res.status(400).json('unable to work with API'));\r\n\r\n}\r\n\r\n\r\nconst handleImage = (req,res, db)=>{\r\n\r\n    const {id} = req.body;\r\n    db('users').where('id', '=', id)\r\n    .increment('entries', 1)\r\n    .returning('entries')\r\n    .then(entries => {\r\n        res.json([entries[0]])\r\n    })\r\n    .catch(err => res.status(400).json(\"unable to get entries\"))\r\n}\r\n\r\nmodule.exports = {\r\n    handleImage: handleImage,\r\n    handleAPICall:handleAPICall\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1562821303571
  },
  "{\"sourceRoot\":\"F:\\\\Udemy\\\\Web BootCamp\\\\smartbrainimagedetector-api\\\\controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"F:\\\\Udemy\\\\Web BootCamp\\\\smartbrainimagedetector-api\",\"filename\":\"F:\\\\Udemy\\\\Web BootCamp\\\\smartbrainimagedetector-api\\\\controllers\\\\users.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"F:\\\\Udemy\\\\Web BootCamp\\\\smartbrainimagedetector-api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "F:\\Udemy\\Web BootCamp\\smartbrainimagedetector-api\\controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "F:\\Udemy\\Web BootCamp\\smartbrainimagedetector-api",
      "filename": "F:\\Udemy\\Web BootCamp\\smartbrainimagedetector-api\\controllers\\users.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "F:\\Udemy\\Web BootCamp\\smartbrainimagedetector-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "F:\\Udemy\\Web BootCamp\\smartbrainimagedetector-api\\controllers\\users.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "F:\\Udemy\\Web BootCamp\\smartbrainimagedetector-api\\controllers\\users.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "F:\\Udemy\\Web BootCamp\\smartbrainimagedetector-api\\controllers",
        "sourceFileName": "users.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar getAllUsers = function getAllUsers(res, db) {\n  db.select('*').from('users').then(function (users) {\n    return res.json(users);\n  });\n};\n\nmodule.exports = {\n  getAllUsers: getAllUsers\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJzLmpzIl0sIm5hbWVzIjpbImdldEFsbFVzZXJzIiwicmVzIiwiZGIiLCJzZWxlY3QiLCJmcm9tIiwidGhlbiIsInVzZXJzIiwianNvbiIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTUEsV0FBVyxHQUFHLFNBQWRBLFdBQWMsQ0FBQ0MsR0FBRCxFQUFNQyxFQUFOLEVBQVc7QUFDM0JBLEVBQUFBLEVBQUUsQ0FBQ0MsTUFBSCxDQUFVLEdBQVYsRUFBZUMsSUFBZixDQUFvQixPQUFwQixFQUE2QkMsSUFBN0IsQ0FBa0MsVUFBQUMsS0FBSztBQUFBLFdBQ25DTCxHQUFHLENBQUNNLElBQUosQ0FBU0QsS0FBVCxDQURtQztBQUFBLEdBQXZDO0FBRUgsQ0FIRDs7QUFLQUUsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2JULEVBQUFBLFdBQVcsRUFBRUE7QUFEQSxDQUFqQiIsInNvdXJjZVJvb3QiOiJGOlxcVWRlbXlcXFdlYiBCb290Q2FtcFxcc21hcnRicmFpbmltYWdlZGV0ZWN0b3ItYXBpXFxjb250cm9sbGVycyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGdldEFsbFVzZXJzID0gKHJlcywgZGIpPT57XHJcbiAgICBkYi5zZWxlY3QoJyonKS5mcm9tKCd1c2VycycpLnRoZW4odXNlcnMgPT5cclxuICAgICAgICByZXMuanNvbih1c2VycykpO1xyXG59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHtcclxuICAgIGdldEFsbFVzZXJzOiBnZXRBbGxVc2Vyc1xyXG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "users.js"
      ],
      "names": [
        "getAllUsers",
        "res",
        "db",
        "select",
        "from",
        "then",
        "users",
        "json",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,WAAW,GAAG,SAAdA,WAAc,CAACC,GAAD,EAAMC,EAAN,EAAW;AAC3BA,EAAAA,EAAE,CAACC,MAAH,CAAU,GAAV,EAAeC,IAAf,CAAoB,OAApB,EAA6BC,IAA7B,CAAkC,UAAAC,KAAK;AAAA,WACnCL,GAAG,CAACM,IAAJ,CAASD,KAAT,CADmC;AAAA,GAAvC;AAEH,CAHD;;AAKAE,MAAM,CAACC,OAAP,GAAiB;AACbT,EAAAA,WAAW,EAAEA;AADA,CAAjB",
      "sourceRoot": "F:\\Udemy\\Web BootCamp\\smartbrainimagedetector-api\\controllers",
      "sourcesContent": [
        "const getAllUsers = (res, db)=>{\r\n    db.select('*').from('users').then(users =>\r\n        res.json(users));\r\n}\r\n\r\nmodule.exports = {\r\n    getAllUsers: getAllUsers\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1562819149775
  }
}